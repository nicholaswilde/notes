{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Notes","text":"<p>My notes on various things.</p> <p>The majority of my notes are for Debian based distros.</p> <p>Also, take a look at my dotfiles repo.</p>"},{"location":"#tldr","title":"TL;DR","text":"<ul> <li>git gpg build-essential</li> <li>brew</li> <li>lpass</li> <li>ssh</li> <li>gpg</li> <li>gh</li> <li>docker</li> </ul>"},{"location":"#background","title":"Background","text":"<p>When setting up a project or system, such as a git repoistory or GNU/Linux or Windows computer, I need to reference solutions to problems that I have solved in the past and so this repository is my notes to myself. All I need to do is go to this site and search for something that I have done in the past.</p> <p>I know that Obsidian exists as a mind map of ideas, but I don't like the fact that the free version is strictly local and not web bassed. Since I am device agnostic and could be working off of a Windows system, GNU/Linux, Mac (rarely), or mobile somewhere, I prefer that my notes be in the cloud. Hosting my notes on GitHub and publishing them to an <code>mkdocs-material</code> site allows me to access them from anywhere as well as share my notes with the world in hopes that they help someone else.</p> <p>Warning</p> <p>The notes are broken up by a topic per page but sometimes can be found in other areas of site. I don't spend a whole lot of time giving background nor organizing the notes and so it may be a little difficult to interpret my chicken scratch.</p>"},{"location":"#references","title":"References","text":"<ul> <li>hossainemruz's notes</li> </ul>"},{"location":"#license","title":"\u200b License","text":"<p>\u200b\u200bApache License 2.0</p>"},{"location":"#author","title":"\u200b\u200bAuthor","text":"<p>\u200bThis project was started in 2021 by \u200bNicholas Wilde\u200b.</p>"},{"location":"ansible/","title":"Ansible","text":"","tags":["linux"]},{"location":"ansible/#installation","title":"Installation","text":"<pre><code>(\n  UBUNTU_CODENAME=$(source /etc/os-release &amp;&amp; echo $VERSION_CODENAME | sed -e 's/bookworm/jammy/' -e 's/bullseye/focal/' -e 's/buster/bionic/')\n  wget -O- \"https://keyserver.ubuntu.com/pks/lookup?fingerprint=on&amp;op=get&amp;search=0x6125E2A8C77F2818FB7BD15B93C4A3FD7BB9C367\" | sudo gpg --dearmour -o /usr/share/keyrings/ansible-archive-keyring.gpg\n  echo \"deb [signed-by=/usr/share/keyrings/ansible-archive-keyring.gpg] http://ppa.launchpad.net/ansible/ansible/ubuntu $UBUNTU_CODENAME main\" | sudo tee /etc/apt/sources.list.d/ansible.list\n  sudo apt update &amp;&amp; sudo apt install ansible\n)\n</code></pre>","tags":["linux"]},{"location":"ansible/#standard-version","title":"standard-version","text":"<pre><code># Install\nsudo npm i -g standard-version\n</code></pre>","tags":["linux"]},{"location":"ansible/#jmespath-missing","title":"<code>jmespath</code> Missing","text":"<pre><code>pipx install ansible-core jmespath\npipx inject ansible-core jmespath\n</code></pre>","tags":["linux"]},{"location":"apps/","title":"Apps","text":""},{"location":"apps/#chrony","title":"Chrony","text":""},{"location":"apps/#server","title":"Server","text":"<pre><code>(\n  sudo apt install chrony\n  sudo service chrony restart\n)\n</code></pre> <p>/etc/chrony/chrony.conf</p> <pre><code>confdir /etc/chrony/conf.d\npool 2.debian.pool.ntp.org iburst\nsourcedir /run/chrony-dhcp\nsourcedir /etc/chrony/sources.d\nkeyfile /etc/chrony/chrony.keys\ndriftfile /var/lib/chrony/chrony.drift\nntsdumpdir /var/lib/chrony\nlogdir /var/log/chrony\nmaxupdateskew 100.0\nrtcsync\nmakestep 1 3\nleapsectz right/UTC\nallow 192.168.1.0/24\nauthselectmode ignore\nmanual\n</code></pre>"},{"location":"apps/#client","title":"Client","text":"<pre><code>(\n  sudo apt install chrony\n  sudo service chrony restart\n  # Check that server is running\n  sudo chronyc sources -v -a\n  sudo chronyc clients\n  sudo chronyc ntpdata &lt;Server IP&gt;\n  # Check that port 123 is running\n  nc -zvu &lt;Server IP&gt; 123\n  chronyc activity\n  chronyc tracking\n)\n</code></pre> <pre><code># /etc/chrony/chrony.conf\nserver 192.168.1.198 iburst trust\nauthselectmode ignore\nconfdir /etc/chrony/conf.d\npool ntp.ubuntu.com        iburst maxsources 4\npool 0.ubuntu.pool.ntp.org iburst maxsources 1\npool 1.ubuntu.pool.ntp.org iburst maxsources 1\npool 2.ubuntu.pool.ntp.org iburst maxsources 2\nsourcedir /run/chrony-dhcp\nsourcedir /etc/chrony/sources.d\nkeyfile /etc/chrony/chrony.keys\ndriftfile /var/lib/chrony/chrony.drift\nntsdumpdir /var/lib/chrony\nlogdir /var/log/chrony\nmaxupdateskew 100.0\nrtcsync\nmakestep 1 3\nleapsectz right/UTC\n</code></pre>"},{"location":"apps/#ubuntu","title":"Ubuntu","text":"<pre><code>sudo apt install unzip build-essential\n</code></pre>"},{"location":"apps/#brew","title":"brew","text":"<pre><code>(\n  /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" &amp;&amp; \\\n  echo &gt;&gt; /home/nicholas/.bashrc &amp;&amp; \\\n  echo 'eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"' &gt;&gt; /home/nicholas/.bashrc &amp;&amp; \\\n  eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\" &amp;&amp; \\\n  brew install gcc\n)\n</code></pre> <pre><code># should add this to dotfiles\nbrew leaves &gt; my_brew.txt\nxargs brew install &lt; my_brew.txt\n</code></pre>"},{"location":"apps/#chrome-os","title":"Chrome OS","text":"<pre><code>export CI=1\nsudo chmod -R nicholas:nicholas /home/linuxbrew\n</code></pre>"},{"location":"apps/#gh","title":"gh","text":"<pre><code>brew install gh\n</code></pre>"},{"location":"apps/#nanorc","title":"nanorc","text":"<pre><code>wget https://raw.githubusercontent.com/scopatz/nanorc/master/install.sh -O- | sh\n</code></pre> <pre><code>echo \"set tabsize 2\" &gt;&gt; ~/.nanorc\necho \"set tabstospaces\" &gt;&gt; ~/.nanorc\n</code></pre>"},{"location":"apps/#semver","title":"semver","text":"<pre><code>sudo wget -O /usr/bin/semver https://github.com/fsaintjacques/semver-tool/raw/master/src/semver\nsudo chmod +x /usr/bin/semver\n</code></pre>"},{"location":"apps/#pre-commit","title":"pre-commit","text":"<pre><code>brew install pre-commit\n</code></pre>"},{"location":"apps/#powershell","title":"PowerShell","text":"<pre><code># Update the list of packages\nsudo apt-get update\n# Install pre-requisite packages.\nsudo apt-get install -y wget apt-transport-https software-properties-common\n# Download the Microsoft repository GPG keys\nwget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb\n# Register the Microsoft repository GPG keys\nsudo dpkg -i packages-microsoft-prod.deb\n# Update the list of packages after we added packages.microsoft.com\nsudo apt-get update\n# Install PowerShell\nsudo apt-get install -y powershell\n# Start PowerShell\npwsh\n</code></pre>"},{"location":"apps/#mkdocs","title":"mkdocs","text":"<pre><code>(\n  wget https://bootstrap.pypa.io/get-pip.py\n  python get-pip.py\n  pip install mkdocs\n)\n</code></pre>"},{"location":"apps/#mkdocs-material","title":"mkdocs-material","text":"<pre><code>pip install mkdocs-material mkdocs-minify-plugin\n</code></pre> <p>2</p>"},{"location":"apt/","title":"Apt","text":""},{"location":"apt/#the-following-signatures-were-invalid-badsig-54404762bbb6e853","title":"The following signatures were invalid: BADSIG 54404762BBB6E853","text":"<p>https://security.debian.org/debian-security/README.security</p> <p>https://www.reddit.com/r/Proxmox/comments/1hiamg8/apt_wont_update_keys_missing_or_invalid/</p> <p>If you are using apt you can use this entry in /etc/apt/sources.list:</p> <pre><code>deb http://security.debian.org/debian-security stable-security main\n</code></pre> <pre><code>(\n  sudo rm -r /var/lib/apt/lists\n  sudo mkdir -p /var/lib/apt/lists/partial\n  sudo apt clean\n  sudo apt update\n)\n</code></pre>"},{"location":"arch/","title":"Arch","text":"","tags":["linux"]},{"location":"arch/#as-root","title":"As Root","text":"","tags":["linux"]},{"location":"arch/#pacman","title":"pacman","text":"<pre><code>su\npacman-key --init &amp;&amp; ls -R / &amp;&amp; ls -R / &amp;&amp; ls -R /\npacman-key --populate archlinuxarm\n\npacman -Su\npacman -Syu\npacman -S --needed archlinux-keyring sudo util-linux systemd-swap ntp raspberrypi-firmware base-devel nfs-utils wget python git go go-tools python-pip rpcbind docker screen github-cli lastpass-cli python-pygments ca-certificates ansible pkgfile\n</code></pre>","tags":["linux"]},{"location":"arch/#timezone","title":"Timezone","text":"<pre><code>rm /etc/localtime\nln -s /usr/share/zoneinfo/America/Los_Angeles /etc/localtime\n</code></pre>","tags":["linux"]},{"location":"arch/#sudo","title":"Sudo","text":"<pre><code># /etc/sudoers\nroot ALL=(ALL) ALL\n\n## Uncomment to allow members of group wheel to execute any command\n%wheel ALL=(ALL) ALL\n\n## Same thing without a password\n%wheel ALL=(ALL) NOPASSWD: ALL\n\n## Uncomment to allow members of group sudo to execute any command\n%sudo   ALL=(ALL) ALL\n</code></pre>","tags":["linux"]},{"location":"arch/#hostname","title":"Hostname","text":"<pre><code>echo \"arch\" | tee /etc/hostname\n# /etc/hosts\n127.0.0.1 localhost.localdomain localhost arch\n</code></pre>","tags":["linux"]},{"location":"arch/#swap","title":"Swap","text":"<pre><code>echo \"swapfc_enabled=1\" | tee /etc/systemd/swap.conf\n</code></pre>","tags":["linux"]},{"location":"arch/#locale","title":"Locale","text":"<pre><code>locale -a\n</code></pre> <pre><code># /etc/locale.gen\n...\nen_US.UTF-8 UTF-8\n..\n</code></pre> <pre><code>sudo locale-gen\n</code></pre> <pre><code>useradd -m -G wheel -s /bin/bash pi\npasswd pi\n</code></pre>","tags":["linux"]},{"location":"arch/#rpi-update","title":"rpi-update","text":"<pre><code>sudo wget https://raw.github.com/Hexxeh/rpi-update/master/rpi-update -O /usr/bin/rpi-update &amp;&amp; sudo chmod +x /usr/bin/rpi-update\nexport PATH=$PATH:/opt/vc/bin/\nsudo rpi-update\n</code></pre>","tags":["linux"]},{"location":"arch/#as-pi","title":"As pi","text":"","tags":["linux"]},{"location":"arch/#ssh","title":"SSH","text":"<pre><code>mkdir ~/.ssh\ncurl https://github.com/nicholaswilde.keys -o ~/.ssh/id_rsa.pub\nchmod 644 ~/.ssh/id_rsa.pub\nchmod 600 ~/.ssh/id_rsa\ncp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\nchmod 0700 ~/.ssh\nssh-import-id-gh nicholaswilde\n</code></pre>","tags":["linux"]},{"location":"arch/#ssh-authentication","title":"SSH Authentication","text":"<pre><code># /etc/ssh/sshd_config\n...\nRSAAuthentication yes\nPubkeyAuthentication yes\n...\n</code></pre>","tags":["linux"]},{"location":"arch/#reference","title":"Reference","text":"<ul> <li>https://archlinuxarm.org/platforms/armv7/broadcom/raspberry-pi-2</li> <li>http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html</li> <li>https://wiki.archlinux.org/index.php/Fstab</li> </ul>","tags":["linux"]},{"location":"bash/","title":"Bash","text":"<pre><code>#!/bin/bash\n\nset -e\nset -o pipefail\n\n# https://stackoverflow.com/a/246128/1061279\nDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &gt;/dev/null 2&gt;&amp;1 &amp;&amp; pwd )\"\nSCRIPT_NAME=$(basename \"${0}\")\nROOT_DIR=\"$(git rev-parse --show-toplevel)\"\nreadonly DIR\nreadonly SCRIPT_NAME\nreadonly ROOT_DIR\n</code></pre>","tags":["linux"]},{"location":"bash/#generate-password","title":"Generate Password","text":"Install<pre><code>sudo apt install apache2-utils\n</code></pre> Generate<pre><code>echo $(htpasswd -nB user) | sed -e s/\\\\$/\\\\$\\\\$/g\n# user:passwordhash\n</code></pre>","tags":["linux"]},{"location":"bash/#files","title":"Files","text":"<p>Delete all files matching a pattern in sub folders</p> <pre><code>find . -name \"*.lock\" -type f -delete\n</code></pre> <p>Clear an already existing file</p> <pre><code>&gt;|file.txt\n</code></pre> <p>Search root for the name</p> <pre><code>sudo find / -name file.txt\n</code></pre> <p>Create a new blank file</p> <pre><code>touch file.txt\n</code></pre> <p>Get file size in bytes</p> <pre><code>wc -c file.txt\n</code></pre> <p>Get the size in bytes of a compressed file</p> <pre><code>gzip -c file.txt | wc -c\nbzip2 -c file.txt | wc -c\ntar -cf - file.txt | wc -c\n</code></pre>","tags":["linux"]},{"location":"bash/#validate-json","title":"Validate JSON","text":"<pre><code>cat foo.json | jq empty\nparse error: Expected separator between values at line 154, column 30\n</code></pre>","tags":["linux"]},{"location":"bash/#remove-file-extension","title":"Remove File Extension","text":"<pre><code>name=$(echo \"$filename\" | cut -f 1 -d '.')\n# or\necho \"${filename%%.*}\"\n</code></pre>","tags":["linux"]},{"location":"bash/#extract-filename-and-extension-in-bash","title":"Extract filename and extension in Bash","text":"<pre><code>~% FILE=\"example.tar.gz\"\n\n~% echo \"${FILE%%.*}\"\nexample\n\n~% echo \"${FILE%.*}\"\nexample.tar\n\n~% echo \"${FILE#*.}\"\ntar.gz\n\n~% echo \"${FILE##*.}\"\ngz\n</code></pre>","tags":["linux"]},{"location":"bash/#full-file-path","title":"Full File Path","text":"<pre><code>readlink -f file.txt\n</code></pre>","tags":["linux"]},{"location":"bash/#checks","title":"Checks","text":"<pre><code># Check if chart dir exists\nif [ -d \"${CHART_PATH}\" ]; then\n  echo \"Chart path already exists, ${CHART_PATH}\"\n  exit 1\nfi\n\n# Check if i2c-tools is installed\nif ! command -v git &amp;&gt; /dev/null; then\n    echo \"git is not installed\"\n    exit 1\nfi\n</code></pre> <p>Check if substring is in string</p> <pre><code>string='My long string'\nif [[ $string == *\"My long\"* ]]; then\n  echo \"It's there!\"\nfi\n</code></pre> <p>Check empty variable</p> <pre><code>if [ -z \"${REPOSITORY}\" ]; then\n  echo \"Could not get the repository\"\n  exit 1\nfi\n</code></pre> <p>Single line checks</p> <pre><code># Check is variable is null\nfunction is_null {\n  [ -z \"$1\" ]\n}\n\n# Check if directory exists\nfunction dir_exists(){\n  [ -d \"${1}\" ]\n}\n\n# Check if command exists\nfunction command_exists(){\n  command -v \"${1}\" &amp;&gt; /dev/null\n}\n\nis_null \"$left\" &amp;&amp; echo \"is null\"\n</code></pre>","tags":["linux"]},{"location":"bash/#string-manipulation","title":"String manipulation","text":"Get variable from a command<pre><code>VAR=$(basename \"/tmp/file.txt\")\n</code></pre> Get last character<pre><code>VAR=\"${VAR: -1}\"\n</code></pre> Remove last character<pre><code>VAR=\"${VAR::-1}\"\n</code></pre> <p>Get domain without the <code>.com</code></p> <p><code>http://user:pw@example.com:80/some/path/url?data&amp;and#hash</code> -&gt; <code>example</code></p> <pre><code># https://unix.stackexchange.com/a/428990/93726\necho \"http://user:pw@example.com:80/some/path/url?data&amp;and#hash\" | sed -e \"s/[^/]*\\/\\/\\([^@]*@\\)\\?\\([^:/]*\\).*/\\2/\" | sed \"s/^www\\.//\" | cut -f 1 -d '.'\n</code></pre> Get first word only<pre><code>s=${var%% *}\n</code></pre> Replace space with dash in var<pre><code>s=\"${var// /-}\"\n</code></pre> To lower<pre><code>s=\"${var,,}\"\n</code></pre> Get extension<pre><code>s=\"${var#*.}\"\n</code></pre> Get last part of extension<pre><code>s=\"${var##*.}\"\n</code></pre> Remove extension<pre><code>s=\"${var%%.*}\"\n</code></pre> get the file and all but last part of file extension<pre><code>s=\"${var%.*}\"\n</code></pre>","tags":["linux"]},{"location":"bash/#checksums","title":"Checksums","text":"<p>Get checksum of remote file</p> <pre><code>wget -qO- https://github.com/nicholaswilde/helm-template/archive/main.zip | sha256sum\n</code></pre> <pre><code>echo \"62df608caba8f2591755f99efac0097c3d7acf313e237e328aa2c046d500efd1  main.zip\" | sha256sum -c\n</code></pre>","tags":["linux"]},{"location":"bash/#scripts","title":"Scripts","text":"<p>Get single options, -v, -h, etc.</p> <pre><code># https://www.jamescoyle.net/how-to/1774-bash-getops-example\n# https://opensource.com/article/19/12/help-bash-program\n# Get the options\nwhile getopts \":hv\" o; do\n  case \"${o}\" in\n    h) # display Help\n      help\n      exit 0;;\n    v)\n      printf \"${SCRIPT_NAME} version ${APP_VERSION}\\n\"\n      exit 0;;\n    \\?) # incorrect option\n      usageerror;;\n  esac\ndone\n\n# https://unix.stackexchange.com/a/214151/93726\nshift \"$((OPTIND-1))\"\n</code></pre>","tags":["linux"]},{"location":"bash/#miscellaneous","title":"Miscellaneous","text":"<p>printf</p> <pre><code>printf \"%s is the value\" \"${var}\"\n\n# Expand the tab, \\t or new line \\n\nvar=\"value\\t\"\nprintf \"%b is the value\" \"${var}\"\n</code></pre> <p>Insert first line of file</p> <pre><code>sed  -i '1i text' filename\n</code></pre> <p>Delete a tmp dir on exit</p> <pre><code># https://stackoverflow.com/a/687052/1061279\ntrap 'rm -rf -- \"$TMP_DIR\"' EXIT\n</code></pre> <p>Download and extract file in one line. Works with tar &amp; zip files.</p> <pre><code>wget -qO- https://github.com/nicholaswilde/helm-template/archive/main.zip | bsdtar -xvf-\n</code></pre> <p>Make variable global from inside function</p> <pre><code>eval VAR=\"value\"\n</code></pre> <p>Compare semver</p> <pre><code># https://stackoverflow.com/a/4025065/1061279\nfunction vercomp () {\n  if [[ $1 == $2 ]]; then\n    return 0\n  fi\n  local IFS=.\n  local i ver1=($1) ver2=($2)\n  # fill empty fields in ver1 with zeros\n  for ((i=${#ver1[@]}; i&lt;${#ver2[@]}; i++)); do\n    ver1[i]=0\n  done\n  for ((i=0; i&lt;${#ver1[@]}; i++)); do\n    if [[ -z ${ver2[i]} ]]; then\n      # fill empty fields in ver2 with zeros\n      ver2[i]=0\n    fi\n    if ((10#${ver1[i]} &gt; 10#${ver2[i]})); then\n      return 1\n    fi\n    if ((10#${ver1[i]} &lt; 10#${ver2[i]})); then\n      return 2\n    fi\n  done\n  return 0\n}\n\nfunction testvercomp () {\n  vercomp $1 $2\n  case $? in\n    0) op='=';;\n    1) op='&gt;';;\n    2) op='&lt;';;\n  esac\n  if [[ $op != $3 ]]; then\n    echo \"The minimum required version of git is $2\"\n    exit 1\n  fi\n}\n\ntestvercomp ${GIT_VER} ${MIN_VER} '&gt;'\n</code></pre>","tags":["linux"]},{"location":"bash/#generate-random-string","title":"Generate Random String","text":"<pre><code>cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1\n</code></pre> <pre><code>#!/bin/bash\n# Load the  myfunctions.sh \n# My local path is /home/vivek/lsst2/myfunctions.sh\n. /home/vivek/lsst2/myfunctions.sh\n\n# Define local variables\n# var1 is not visitable or used by myfunctions.sh\nvar1=\"The Mahabharata is the longest and, arguably, one of the greatest epic poems in any language.\"\n\n# Invoke the is_root()\nis_root &amp;&amp; echo \"You are logged in as root.\" || echo \"You are not logged in as root.\"\n\n# Find out if user account vivek exits or not\nis_user_exits \"vivek\" &amp;&amp; echo \"Account found.\" || echo \"Account not found.\"\n\n# Display $var1\necho -e \"*** Orignal quote: \\n${var1}\"\n\n# Invoke the to_lower()\n# Pass $var1 as arg to to_lower()\n# Use command substitution inside echo\necho -e \"*** Lowercase version: \\n$(to_lower ${var1})\"\n</code></pre>","tags":["linux"]},{"location":"bash/#run-as-different-user","title":"Run As Different User","text":"<pre><code>sudo -u \"${TARGET_USER}\" bash &lt;&lt;\"EOF9\"\n  command\nEOF9\n</code></pre>","tags":["linux"]},{"location":"bash/#return-value-from-function","title":"Return Value from Function","text":"<pre><code>function myfunc(){\n    local  myresult='some value'\n    echo \"$myresult\"\n}\n\nresult=$(myfunc)   # or result=`myfunc`\necho $result\n</code></pre>","tags":["linux"]},{"location":"bash/#sort-semver-using-sort","title":"Sort Semver Using Sort","text":"<pre><code>printf \"1.0\\n2.0\\n2.12\\n2.10\\n1.2\\n1.10\" | sort -t \".\" -k1,1n -k2,2n -k3,3n\n1.0\n1.2\n1.10\n2.0\n2.10\n2.12\n</code></pre>","tags":["linux"]},{"location":"bash/#id-debian-ubuntu","title":"ID (Debian, Ubuntu)","text":"<pre><code>echo $(. /etc/os-release &amp;&amp; echo $ID)\n</code></pre>","tags":["linux"]},{"location":"bash/#arch","title":"Arch","text":"<p>Subs <code>aarch64</code> with <code>arm64</code>, <code>x86_64</code> with <code>amd64</code>, and <code>armv7l</code> and <code>armv6l</code> with <code>arm</code></p> <pre><code>ARCH=$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\\(arm\\)\\(64\\)\\?.*/\\1\\2/' -e 's/aarch64$/arm64/')\necho $ARCH\n</code></pre> <p>Subs <code>aarch64</code> with <code>arm64</code>, <code>x86_64</code> with <code>amd64</code>, and <code>armv7l</code> and <code>armv6l</code> with <code>armhf</code></p> <pre><code>ARCH=$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\\(arm\\)\\(64\\)\\?.*/\\1\\2hf/' -e 's/aarch64$/arm64/')\necho $ARCH\n</code></pre>","tags":["linux"]},{"location":"bash/#check-if-system-needs-to-be-restarted2","title":"[Check if system needs to be restarted][2]","text":"<pre><code>sudo needrestart\n</code></pre> <p>We use the systemctl command as follows to restart services one-by-one:</p> <pre><code>sudo systemctl restart nginx\nsudo systemctl restart firewalld\n</code></pre> <p>We can use bash for loop as follows:</p> <pre><code>for s in systemd-udevd  firewalld  polkit  sshd nginx; do\n  sudo systemctl restart \"$s\"\ndone\n</code></pre> <p>How to restart systemd with PID # 1 without rebooting Linux box</p> <pre><code>sudo systemctl daemon-reexec\n</code></pre> <p>And verify it again:</p> <pre><code>sudo lsof | grep 'DEL.*lib' | cut -f 1 -d ' ' | sort -u\n</code></pre>","tags":["linux"]},{"location":"bash/#check-array-for-value","title":"Check Array for Value","text":"<pre><code>if [[ \" ${array[*]} \" =~ \" ${value} \" ]]; then\n    # whatever you want to do when array contains value\nfi\n\nif [[ ! \" ${array[*]} \" =~ \" ${value} \" ]]; then\n    # whatever you want to do when array doesn't contain value\nfi\n</code></pre>","tags":["linux"]},{"location":"bash/#search-for-string-in-files","title":"Search for string in files","text":"<pre><code>grep -R &lt;stringToSearch&gt; &lt;dirName&gt;\n</code></pre> <p>If you want to get number of occurrences use wc -l as pipe</p> <pre><code>grep -R \"text\" . | wc -l\n</code></pre>","tags":["linux"]},{"location":"bash/#print-colors-bold","title":"Print Colors &amp; Bold","text":"<pre><code>bold=$(tput bold)\nnormal=$(tput sgr0)\nblue=$(tput setaf 4)\n</code></pre> <pre><code>echo \"this is ${bold}bold${normal} but this isn't\"\n</code></pre> Print all colors<pre><code>for c in {0..255}; do tput setaf $c; tput setaf $c | \\cat -v; echo =$c; done | column\n</code></pre> <p>See here for colors.</p>","tags":["linux"]},{"location":"bash/#bypass-alias","title":"Bypass Alias","text":"<p>A simple directive which disables all aliases and functions for the command immediately following it. Shortcut for the bash built-in 'command' - \"command linefoo\".</p> <pre><code>\\foo\n</code></pre>","tags":["linux"]},{"location":"bash/#push-your-present-working-directory-to-a-stack-that-you-can-pop-later","title":"Push your present working directory to a stack that you can pop later","text":"Add directories to stack<pre><code>pushd /tmp\n</code></pre> <p>```shell titl=\"Remove directory from stack\" popd <pre><code>## Run script in subshell\n\n```shell\nsudo -u \"${TARGET_USER}\" bash &lt;&lt;\"EOF\"\n    cd \"$HOME\"\n    mkdir -p \"${HOME}/git/nicholaswilde/\"\n    git clone https://github.com/nicholaswilde/dotfiles.git \"${HOME}/git/nicholaswilde/dotfiles\"\n    cd \"${HOME}/git/nicholaswilde/dotfiles\"\n    # set the correct origin\n    git remote set-url origin git@github.com:nicholaswilde/dotfiles.git\n    # installs all the things\n    make\nEOF\n</code></pre></p>","tags":["linux"]},{"location":"bash/#get-ipv4","title":"Get IPv4","text":"<pre><code>grep -o '[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}'\n</code></pre>","tags":["linux"]},{"location":"bash/#show-environmental-variables","title":"Show Environmental Variables","text":"<pre><code>printenv\nprintenv | less\nprintenv | more\n</code></pre>","tags":["linux"]},{"location":"bash/#show-shell-functions","title":"Show Shell Functions","text":"<pre><code>declare -F | awk '{print $3}' | grep -v '^_'\n</code></pre>","tags":["linux"]},{"location":"bash/#show-shell-aliases","title":"Show Shell Aliases","text":"<pre><code>alias\n</code></pre>","tags":["linux"]},{"location":"bash/#replace-tabs-with-spaces","title":"Replace Tabs with Spaces","text":"<pre><code>sed -i 's/\\t/     /g' tab-file.txt\n</code></pre>","tags":["linux"]},{"location":"bash/#git-status","title":"Git Status","text":"<pre><code>git diff --quiet; nochanges=$?\nif [ $nochanges -eq 0 ]; then\n    # there are no changes\nelse\n    # there are changes\nfi\n</code></pre> <p>Alternatively, if you don't need to store the exit status in a variable, you can do:</p> <pre><code>if git diff --quiet; then\n    # there are no changes\nelse\n    # there are changes\nfi\n</code></pre> <p>Since git diff is a porcelain Git command and you want to do things programmatically, you should probably use the plumbing Git command called git diff-index instead (which also has a --quiet flag, but which must be supplied a tree-ish argument):</p> <pre><code>if git diff-index --quiet HEAD; then\n    # there are no changes\nelse\n    # there are changes\nfi\n</code></pre> <p>As pointed out in a comment below, the approach outlined above does not cover untracked files. To cover them as well, you can use the following instead:</p> <pre><code>if [ -z \"$(git status --porcelain)\" ]; then\n    # there are no changes\nelse\n    # there are changes\nfi\n</code></pre>","tags":["linux"]},{"location":"bash/#relative-path","title":"Relative Path","text":"<p>Using realpath from GNU coreutils 8.23 is the simplest, I think:</p> <pre><code>realpath --relative-to=\"$file1\" \"$file2\"\n</code></pre> <p>For example:</p> <pre><code>realpath --relative-to=/usr/bin/nmap /tmp/testing\n../../../tmp/testing\n</code></pre>","tags":["linux"]},{"location":"bash/#get-between-patterns","title":"Get Between Patterns","text":"<pre><code>aaa\nbbb\npattern1\naaa pattern2\nbbb\nccc\npattern2\nddd\neee\npattern1\nfff\nggg\n</code></pre> <pre><code>sed -n '/^pattern1/,/^pattern2/{p;/^pattern2/q}'\n</code></pre> <pre><code>sed -n '/^pattern1/,${p;/^pattern2/q}'\n</code></pre>","tags":["linux"]},{"location":"bash/#test-if-option-is-set","title":"Test if option is set","text":"<p>If you do <code>set -f</code>, or otherwise disable globbing:, <code>$-</code> will contain <code>f</code>:</p> <pre><code>$ echo $-\nhimBHs\n$ set -f\n$ echo $-\nfhimBHs\n$ bash -fc 'echo $-'\nfhBc\n</code></pre> <p>So:</p> <pre><code>[[ $- = *f* ]]\n</code></pre> <p>Or:</p> <pre><code>case $- in\n *f*)  ... ;;\nesac\n</code></pre>","tags":["linux"]},{"location":"bash/#references","title":"References","text":"<ul> <li>set -e, -u, -o pipefail explanation</li> <li>pure bash bible</li> <li>bash-utility</li> <li>Cheat Sheet</li> <li>commandlinefu</li> <li>Password Special Characters</li> </ul>","tags":["linux"]},{"location":"bitwarden/","title":"Bitwarden","text":"<pre><code>brew install bitwarden-cli\n</code></pre> <pre><code>bw login\n</code></pre> <pre><code>bw get password github\n</code></pre>","tags":["app"]},{"location":"chezmoi/","title":"chezmoi","text":""},{"location":"chromeos/","title":"Chrome OS","text":"","tags":["os"]},{"location":"chromeos/#ssh-nerd-fonts","title":"SSH Nerd Fonts","text":"<p>Change the font in the SSH terminal to render emoji correctly for LazyVim.</p> Penguin<pre><code>chrome-untrusted://terminal/html/nassh_preferences_editor.html\n</code></pre> Secure Shell extension<pre><code>chrome-extension://iodihamcpbpeioajjeobimgagajmlibd/html/nassh_preferences_editor.html\n</code></pre> Custom CSS (inline text)<pre><code>@font-face {\n    font-family: \"Caskaydia Cove NFM\";\n    src: url(\"https://raw.githubusercontent.com/ryanoasis/nerd-fonts/v3.1.1/patched-fonts/CascadiaCode/Regular/CaskaydiaCoveNerdFontMono-Regular.ttf\");\n    font-weight: normal;\n    font-style: normal;\n}\n\nx-row {\n    text-rendering: optimizeLegibility;\n    font-variant-ligatures: normal;\n}\n</code></pre> Text font family<pre><code>'Caskaydia Cove NFM', 'Fira Code', 'Noto Sans Mono'\n</code></pre>","tags":["os"]},{"location":"chromeos/#pin-secure-shell-profile","title":"Pin Secure Shell Profile","text":"<p>When running a profile and directly pinning the window to the taskbar, the Secure Shell options window will show instead of the profile window.</p> <p>To pin the actual profile window:</p> <ol> <li>Type <code>ssh</code> + <code>tab</code> in the url bar.</li> <li>Type the name of the of the profile so that the profile opens up in a regular tab with the URL bar shown.</li> <li>Three dots -&gt; More tools -&gt; Create shortcut</li> <li>Check <code>Open as new window</code> and click <code>OK</code>.</li> <li>Pin the newly created shortcut window.</li> </ol>","tags":["os"]},{"location":"chromeos/#brother-hl-2270dw-printer","title":"Brother HL-2270DW Printer","text":"<pre><code>Address: &lt;IP&gt;:9100\nProtocol: AppSocket(TCP/IP)\nQueue: ipp/print\n</code></pre>","tags":["os"]},{"location":"chromeos/#clipboard","title":"Clipboard","text":"Mods GistOriginals <pre><code>(\n  curl \"https://gist.githubusercontent.com/nicholaswilde/28f1d91df80ab3723ed7697460349ac8/raw/280fa16599e64745cc7f4e71df265ae1aafbf331/term-notify.sh\" | sudo tee /usr/local/bin/notify &amp;&amp; sudo chmod +x /usr/local/bin/notify\n  curl \"https://chromium.googlesource.com/apps/libapps/+/HEAD/hterm/etc/hterm-show-file.sh?format=TEXT\" | base64 --decode | sudo tee /usr/local/bin/show-file &amp;&amp; sudo chmod +x /usr/local/bin/show-file\n  curl \"https://gist.githubusercontent.com/nicholaswilde/28f1d91df80ab3723ed7697460349ac8/raw/280fa16599e64745cc7f4e71df265ae1aafbf331/osc52.sh\" | sudo tee /usr/local/bin/copy &amp;&amp; sudo chmod +x /usr/local/bin/copy\n)\n</code></pre> <pre><code>(\n  curl \"https://chromium.googlesource.com/apps/libapps/+/HEAD/hterm/etc/hterm-notify.sh?format=TEXT\" | base64 --decode | sudo tee /usr/local/bin/notify &amp;&amp; sudo chmod +x /usr/local/bin/notify\n  curl \"https://chromium.googlesource.com/apps/libapps/+/HEAD/hterm/etc/hterm-show-file.sh?format=TEXT\" | base64 --decode | sudo tee /usr/local/bin/show-file &amp;&amp; sudo chmod +x /usr/local/bin/show-file\n  curl \"https://chromium.googlesource.com/apps/libapps/+/HEAD/hterm/etc/osc52.sh?format=TEXT\" | base64 --decode | sudo tee /usr/local/bin/copy &amp;&amp; sudo chmod +x /usr/local/bin/copy\n)\n</code></pre>","tags":["os"]},{"location":"chromeos/#notify-tmux-fix","title":"<code>notify</code> tmux fix","text":"<pre><code># Send a DCS sequence through tmux.\n# Usage: &lt;sequence&gt;\ntmux_dcs() {\n  printf '\\033Pt\\033%s\\033\\\\' \"$1\" &gt; $( tmux display-message -p \"#{client_tty}\" )\n}\n</code></pre>","tags":["os"]},{"location":"chromeos/#copy-tmux-fix","title":"<code>copy</code> tmux fix","text":"<p>See my gist for the modified versions.</p> <p>Comment out <code>tmux</code> case. Normal <code>printf</code> yworks for some reason.</p> <pre><code>...\n# Send an escape sequence to hterm.\n# Usage: &lt;sequence&gt;\nprint_seq() {\n  local seq=\"$1\"\n\n  case ${TERM-} in\n  screen*)\n    # Since tmux defaults to setting TERM=screen (ugh), we need to detect\n    # it here specially.\n    if [ -n \"${TMUX-}\" ]; then\n      tmux_dcs \"${seq}\"\n    else\n      screen_dcs \"${seq}\"\n    fi\n    ;;\n  # tmux*)\n  #   tmux_dcs \"${seq}\"\n  #   ;;\n  *)\n    printf '%s' \"${seq}\"\n    ;;\n  esac\n}\n...\n</code></pre> ~/.config/tmux/tmux.conf<pre><code>set -g set-clipboard on          # use system clipboard\n</code></pre>","tags":["os"]},{"location":"chromeos/#stop-penguin-terminal","title":"Stop Penguin Terminal","text":"<p>Open Crosh</p> <pre><code>Ctrl + Alt + T\n</code></pre> <p>Stop Penguin terminal</p> <pre><code>vmc stop termina\n</code></pre> <pre><code>vmc start termina\n</code></pre>","tags":["os"]},{"location":"chromeos/#add-remote","title":"Add Remote","text":"<pre><code>lxc remote add canonical https://images.lxd.canonical.com --protocol simplestreams --auth-type tls\n</code></pre> <p>Start NixOS</p> <pre><code>lxc launch canonical:nixos/24.05 nixos\n</code></pre> <p>From <code>crosh</code></p> <pre><code>vmc container termina nixos\n</code></pre>","tags":["os"]},{"location":"chromeos/#references","title":"References","text":"<ul> <li>https://www.youtube.com/watch?v=sIU5qOyBO-Q</li> </ul>","tags":["os"]},{"location":"codex/","title":"Codex","text":"<p>Codex CLI is a coding agent from OpenAI that runs locally on your computer. If you are looking for the cloud-based agent from OpenAI, Codex Web</p>"},{"location":"codex/#installation","title":"Installation","text":"npmbrew <pre><code>npm install -g @openai/codex\n</code></pre> <pre><code>brew install codex\n</code></pre>"},{"location":"codex/#config","title":"Config","text":"<pre><code>export OPENAI_API_KEY=\"your-api-key-here\"\n</code></pre> <pre><code># ~/.codex/config.toml\npreferred_auth_method = \"apikey\"\n</code></pre> <p>Then simply run <code>codex</code> to get started:</p> <pre><code>codex\n</code></pre>"},{"location":"deprecation/","title":"Deprecation","text":"<p>How to deprecate repositories or repo components.</p> <p>Add   <code>DEPRECATED</code> to the repo Description.</p> <pre><code>:no_entry:&amp;nbsp; DEPRECATED\n</code></pre> <p>Add link to what to use instead.</p> <p>Chart example.</p> <pre><code>This chart has been depcrecated. Please use the [k8s@home version](https://artifacthub.io/packages/helm/k8s-at-home/wikijs) instead.\n</code></pre> <p>Add unmaintained badge.</p> <p></p> <pre><code>[![No Maintenance Intended](http://unmaintained.tech/badge.svg)](http://unmaintained.tech/)\n</code></pre>"},{"location":"docker/","title":"Docker","text":""},{"location":"docker/#installation","title":"Installation","text":"<pre><code>(\n  set -x; sudo apt-get update &amp;&amp;\n  sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release &amp;&amp;\n  DIST=$(lsb_release -is | tr '[:upper:]' '[:lower:]') &amp;&amp;\n  ARCH=\"$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\\(armhf\\)\\(64\\)\\?.*/\\1\\2hf/' -e 's/aarch64$/arm64/')\" &amp;&amp;\n  curl -fsSL \"https://download.docker.com/linux/${DIST}/gpg\" | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg &amp;&amp;\n  echo \"deb [arch=${ARCH} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/${DIST} $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n  sudo apt update &amp;&amp;\n  sudo apt install -y docker-ce docker-ce-cli containerd.io &amp;&amp;\n  sudo usermod -aG docker $(whoami)\n  newgrp docker\n)\n</code></pre>"},{"location":"docker/#test-that-sudo-is-not-needed","title":"Test that sudo is not needed","text":"<pre><code>docker run --rm hello-world\n</code></pre>"},{"location":"docker/#qemu-user-static","title":"qemu-user-static","text":"<pre><code>uname -m\n# x86_64\ndocker run --rm -t arm64v8/ubuntu uname -m\n# standard_init_linux.go:211: exec user process caused \"exec format error\"\ndocker run --rm --privileged multiarch/qemu-user-static --reset -p yes\ndocker run --rm -t arm64v8/ubuntu uname -m\n# aarch64\n</code></pre>"},{"location":"docker/#buildx","title":"buildx","text":"<pre><code>mkdir ~/.docker/cli-plugins\nwget https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64 -O ~/.docker/cli-plugins/docker-buildx\nchmod a+x ~/.docker/cli-plugins/docker-buildx\n# Set buildx as default\ndocker buildx install\n# Create builder\ndocker buildx create --name mybuilder\n# Switch to the new builder\ndocker buildx use mybuilder\n# Inspect it\ndocker buildx inspect --bootstrap\n</code></pre>"},{"location":"docker/#prune-all","title":"Prune all","text":"<pre><code>docker system prune --all\n</code></pre>"},{"location":"docker/#ssh-certs","title":"ssh certs","text":"<pre><code>curl --remote-name --time-cond cacert.pem https://curl.se/ca/cacert.pem\n</code></pre>"},{"location":"docker/#shell","title":"Shell","text":"<pre><code># Debian\ndocker exec -it &lt;container name&gt; /bin/bash\ndocker run -it --rm &lt;image name&gt; /bin/bash\n# alpine\ndocker exec -it &lt;container name&gt; /bin/ash\ndocker run -it --rm alpine:3.13.1 &lt;container name&gt; /bin/ash\n</code></pre>"},{"location":"docker/#stop-all-containers","title":"Stop all containers","text":"<pre><code>docker container stop $(docker container ls -aq)\n</code></pre>"},{"location":"docker/#remove-all-stopped-containers","title":"Remove all stopped containers","text":"<pre><code>docker container rm $(docker container ls -aq)\n</code></pre>"},{"location":"docker/#to-delete-all-containers-including-its-volumes","title":"To delete all containers including its volumes","text":"<pre><code>docker rm -vf $(docker ps -a -q)\n</code></pre>"},{"location":"docker/#to-delete-all-the-images","title":"To delete all the images,","text":"<pre><code>docker rmi -f $(docker images -a -q)\n</code></pre> <p>Remember, you should remove all the containers before removing all the images from which those containers were created.</p>"},{"location":"docker/#copy-multiple-files","title":"Copy Multiple Files","text":"<pre><code>COPY [\"__BUILD_NUMBER\", \"README.md\", \"gulpfile\", \"another_file\", \"./\"]\n</code></pre>"},{"location":"docker/#docker-compose","title":"docker-compose","text":"<pre><code>sudo curl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\n</code></pre>"},{"location":"docker/#hadolint","title":"hadolint","text":"<pre><code>$ brew install hadolint\n</code></pre>"},{"location":"docker/#pull-by-digest","title":"Pull by Digest","text":"<pre><code>docker run -it --rm python:3.7.10-slim-buster@sha256:482d4cc1ae3c95d0f4dd25005e22a17f22f693ca7fb07bb7870ff9354844f738 /bin/bash\n</code></pre>"},{"location":"docker/#run-on-current-directory","title":"Run on Current Directory","text":"<pre><code>docker run --rm -it -v $(pwd):/charts --entrypoint \"/bin/bash\" -w /charts k8s-at-home/charts-unit-test -l -c \"bundle exec m -r ./test/charts\"\n</code></pre>"},{"location":"docker/#check-if-image-exists","title":"Check if Image Exists","text":"<pre><code>docker inspect --type=image treeder/hello.rb:nada\nError: No such image: treeder/hello.rb:nada\n[]\n</code></pre>"},{"location":"docker/#insecure-registries","title":"Insecure Registries","text":"<pre><code>sudo nano /etc/docker/daemon.json\n</code></pre> <pre><code>{\n  \"insecure-registries\" : [\"registry.192.168.1.201.nip.io\"]\n  \"insecure-registries\" : [\"registry.192.168.1.202.nip.io\"]\n  \"insecure-registries\" : [\"registry.192.168.1.203.nip.io\"]\n  \"insecure-registries\" : [\"registry.192.168.1.204.nip.io\"]\n  \"insecure-registries\" : [\"registry.192.168.1.205.nip.io\"]\n  \"insecure-registries\" : [\"registry.192.168.1.206.nip.io\"]\n  \"insecure-registries\" : [\"registry.192.168.1.207.nip.io\"]\n}\n</code></pre>"},{"location":"docker/#references","title":"References","text":"<ul> <li>docker-template wiki</li> <li>https://docs.docker.com/docker-for-mac/multi-arch/</li> <li>https://github.com/docker/buildx#binary-release</li> <li>https://docs.docker.com/buildx/working-with-buildx/</li> </ul>"},{"location":"esphome/","title":"ESPHome","text":"","tags":["homelab","linux","esp32"]},{"location":"esphome/#similink-xy-wfusb","title":"Similink XY-WFUSB","text":"","tags":["homelab","linux","esp32"]},{"location":"esphome/#wiring","title":"Wiring","text":"","tags":["homelab","linux","esp32"]},{"location":"esphome/#usb-to-ttl-serial-adapter","title":"USB to TTL Serial Adapter","text":"<pre><code>( )          &lt;- vcc - empty\n( )          &lt;- gnd - empty\n( )          &lt;- txd - device rx       usb male port - plugged into computer port\n( )          &lt;- rxd - device tx\n( )          &lt;- rts - empty\n( )          &lt;- cts - empty\n</code></pre>","tags":["homelab","linux","esp32"]},{"location":"esphome/#xy-wfusb-device","title":"XY-WFUSB Device","text":"<pre><code>usb female port\npush button is on the other side of the board \n( )          &lt;- 3v3   - empty\n( )          &lt;- rst   - empty\n( )          &lt;- gpio0 - empty\n( )          &lt;- rx    - adapter txd\n( )          &lt;- tx    - adapter rxd\n( )          &lt;- gnd   - empty\nusb male port         - plugged into power supply/computer port\n</code></pre> Pin Function Note GPIO00 User (Pad GPIO-0) Pulled-up to HIGH, boot fails if pulled LOW GPIO01 User (Pad TX) HIGH at boot, spits debug output at boot, boot fails if pulled LOW GPIO02 None GPIO03 User (Pad RX) HIGH at boot GPIO04 Button 1 Pin input LOW when button is pressed GPIO05 Relay 1 USB socket power with LED is ON when pin output HIGH GPIO09 None GPIO10 None GPIO12 None GPIO13 None GPIO14 Led_i 1 Green LED, LED is ON when pin output HIGH GPIO15 None GPIO16 LedLink Blue LED, LED is ON when pin output HIGH. This is the device status LED. GPIO17 None","tags":["homelab","linux","esp32"]},{"location":"esphome/#instructions","title":"Instructions","text":"<ul> <li>Wire USB TTL serial adapter to device.</li> <li>Plug in USB TTL serial adapter to computer.</li> <li>Plug in device to power supply/other computer port.</li> <li>Use esphome command line to flash</li> </ul> <pre><code>esphome wizard switch.yaml\nesphome run switch.yaml\n</code></pre>","tags":["homelab","linux","esp32"]},{"location":"esphome/#template","title":"Template","text":"<p>Configure reset pin if it doesn't work.</p> <pre><code>...\nuart:\n  id: uart_bus\n  tx_pin: GPIO1\n  rx_pin: GPIO3\n  rts_pin: GPIO14\n  cts_pin: GPIO15\n  baud_rate: 115200 &lt;- need to verify when looking at output of esphome run switch.yaml\n</code></pre> <pre><code>substitutions:\n  name: \"ipad-charge-controller\"\n  name_underscored: ipad_charge_controller\n  friendly_name: iPad charge controller\n\nesphome:\n  name: ${name}\n  name_add_mac_suffix: false\n  friendly_name: ${friendly_name}\n  platform: ESP8266\n  board: esp01_1m\n\napi:\n  encryption:\n    key: !secret encryption_key\n\nlogger:\n  level: debug\n\nota:\n  password: !secret ota_password\n\nwifi:\n  ssid: !secret wifi_ssid\n  password: !secret wifi_password\n  manual_ip:\n    # I am using static IPs here.  You may want to\n    # omit this section altogether.\n    static_ip: 10.250.1.18\n    gateway: 10.250.1.1\n    subnet: 255.255.255.0\n\nbutton:\n- platform: restart\n  name: Restart\n  entity_category: diagnostic\n  icon: mdi:restart\n- platform: safe_mode\n  name: Safe mode restart\n  entity_category: diagnostic\n  icon: mdi:restart-alert\n\n# Blue LED\nstatus_led:\n  pin:\n    number: GPIO16\n\nswitch:\n  # Relay\n  - platform: gpio\n    id: relay\n    pin: GPIO5\n\n  # Green LED\n  - platform: gpio\n    pin: GPIO14\n    id: green_led\n    inverted: true # start on\n\n  # Switch template to link relay and green LED states\n  # LED is on when relay is off\n  - platform: template\n    id: ${name_underscored}_switch\n    name: Switch\n    lambda: |-\n      if (id(relay).state) {\n        return true;\n      } else {\n        return false;\n      }\n    turn_on_action:\n        - switch.turn_on:\n            id: green_led\n        - switch.turn_on:\n            id: relay\n    turn_off_action:\n        - switch.turn_off:\n            id: green_led\n        - switch.turn_off:\n            id: relay\n\n# Button\nbinary_sensor:\n  - platform: gpio\n    id: ${name_underscored}_button\n    pin:\n      number: GPIO04\n      mode: INPUT_PULLUP\n      inverted: True\n    on_press:\n      - switch.toggle: \"${name_underscored}_switch\"\n</code></pre>","tags":["homelab","linux","esp32"]},{"location":"esphome/#references","title":"References","text":"<ul> <li>https://esphome.io/guides/getting_started_command_line.html</li> <li>https://community.home-assistant.io/t/sinilink-wifi-usb-controller-xy-wfusb-turns-usb-port-power-on-off-esphome-yaml/574532/2</li> <li>https://tech.scargill.net/aliexpress-sinilink-wifi-usb-controller/</li> <li>https://rudd-o.com/linux-and-free-software/switching-an-usb-load-on-or-off-using-the-sinilink-xy-wfusb-and-esphome</li> <li>https://esphome.io/components/uart.html</li> </ul>","tags":["homelab","linux","esp32"]},{"location":"flux/","title":"Flux","text":""},{"location":"flux/#installation","title":"Installation","text":"<pre><code>brew install fluxcd/tap/flux\n</code></pre>"},{"location":"flux/#getting-started","title":"Getting Started","text":"<pre><code># ~/.bashrc or ~/.bash_profile\n. &lt;(flux completion bash)\n</code></pre> <p>Check requirements</p> <pre><code>flux check --pre\n\u25ba checking prerequisites\n\u2714 kubectl 1.18.3 &gt;=1.18.0\n\u2714 kubernetes 1.18.2 &gt;=1.16.0\n\u2714 prerequisites checks passed\n</code></pre> <p>Run the bootstrap command:</p> <pre><code>flux bootstrap github \\\n  --owner=$GITHUB_USER \\\n  --repository=home-cluster \\\n  --branch=main \\\n  --path=./cluster \\\n  --personal\n</code></pre>"},{"location":"flux/#helm","title":"Helm","text":""},{"location":"flux/#valuesyaml","title":"values.yaml","text":"<pre><code>---\nnfs:\n  path: /home/pi/nas/nfs\n  server: 192.168.1.192\nstorageClass:\n  defaultClass: false\n  name: managed-nfs-storage\n</code></pre>"},{"location":"flux/#source","title":"Source","text":"<pre><code>flux create source helm repo-name-charts \\\n    --url https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/ \\\n    --export | tee repo-name-charts.yaml\n</code></pre>"},{"location":"flux/#helmrelease","title":"HelmRelease","text":"<pre><code>flux create helmrelease \\\n    chart-name \\\n    --source HelmRepository/repo-name-charts \\\n    --values values.yaml \\\n    --chart chart-name \\\n    --chart-version chart-version \\\n    --target-namespace namespace-name \\\n    --export \\\n    | tee helm-release.yaml\n</code></pre>"},{"location":"flux/#references","title":"References","text":"<ul> <li>Getting Started</li> </ul>"},{"location":"git/","title":"Git","text":"","tags":["linux"]},{"location":"git/#gpg","title":"gpg","text":"<p>Telling Git about your signing key</p>","tags":["linux"]},{"location":"git/#configure","title":"Configure","text":"<pre><code>(\n  git config --global user.email \"ncwilde43@gmail.com\"\n  git config --global user.name \"n\u03b9c\u043dola\u0455 w\u03b9lde\"\n  git config --global init.defaultBranch main\n  git config --global user.signingkey 69FF3D02ABFCD01F328778D5374FA199233281E4\n  git config --global commit.gpgsign true\n  git config --global pull.rebase false\n)\n</code></pre>","tags":["linux"]},{"location":"git/#usage","title":"Usage","text":"","tags":["linux"]},{"location":"git/#switching-remote-urls","title":"Switching Remote URLs","text":"<pre><code>git remote -v\norigin  git@github.com:USERNAME/REPOSITORY.git (fetch)\norigin  git@github.com:USERNAME/REPOSITORY.git (push)\ngit remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n</code></pre>","tags":["linux"]},{"location":"git/#syncing-a-fork","title":"Syncing a Fork","text":"<pre><code># Configuring a remote for a fork if it doesn't already exist\ngit remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git\ngit fetch upstream\ngit checkout main\ngit merge upstream/main\n# Push the changes\ngit push origin main\n</code></pre>","tags":["linux"]},{"location":"git/#edit-remote-branch","title":"Edit Remote Branch","text":"<p>In both cases, start by fetching from the remote repository to make sure you have all the latest changes downloaded.</p> <pre><code>git fetch origin branch-name\n</code></pre> <p>This will fetch all of the remote branches for you. You can see the branches available for checkout with:</p> <pre><code>git branch -v -a\n...\nremotes/origin/test\n</code></pre> <p>The branches that start with remotes/* can be thought of as read only copies of the remote branches. To work on a branch you need to create a local branch from it. This is done with the Git command switch (since Git 2.23) by giving it the name of the remote branch (minus the remote name):</p> <pre><code>git switch test\n</code></pre> <p>In this case Git is guessing (can be disabled with --no-guess) that you are trying to checkout and track the remote branch with the same name.</p>","tags":["linux"]},{"location":"git/#different-path","title":"Different Path","text":"<pre><code>git -C &lt;path&gt;\n</code></pre>","tags":["linux"]},{"location":"git/#empty-message","title":"Empty Message","text":"<pre><code>git commit --allow-empty-message -m ''\n</code></pre>","tags":["linux"]},{"location":"git/#change-a-commit-message","title":"Change a Commit Message","text":"<pre><code>git commit --amend\n</code></pre>","tags":["linux"]},{"location":"git/#list-commits","title":"List Commits","text":"<pre><code>git log\n</code></pre>","tags":["linux"]},{"location":"git/#urls","title":"URLs","text":"<ul> <li> <p>Commit: https://github.com/python/cpython/archive/31af650.tar.gz</p> </li> <li> <p>Release Source: https://github.com/nicholaswilde/helm-charts/archive/wikijs-0.1.6.tar.gz</p> </li> </ul>","tags":["linux"]},{"location":"git/#gh","title":"gh","text":"<pre><code>brew install gh\ngh auth login\n</code></pre>","tags":["linux"]},{"location":"git/#no-message","title":"No Message","text":"<pre><code>git commit --allow-empty-message -a -m \"\"\n</code></pre>","tags":["linux"]},{"location":"git/#synchronizing-a-local-git-repository-with-a-remote-one","title":"Synchronizing a local Git repository with a remote one","text":"<pre><code>git fetch --prune\n# https://stackoverflow.com/a/17029936/1061279\ngit branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 &lt;(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d\n</code></pre>","tags":["linux"]},{"location":"git/#deleting-remote-branch","title":"Deleting Remote Branch","text":"<pre><code>git branch -d &lt;branch name&gt;\ngit push origin --delete &lt;branch name&gt;\n</code></pre>","tags":["linux"]},{"location":"git/#rename-branch","title":"Rename Branch","text":"<pre><code>git branch -m &lt;new branch name&gt;\n</code></pre>","tags":["linux"]},{"location":"git/#restore-a-file-from-remote","title":"Restore a File From Remote","text":"<pre><code>git fetch\ngit restore -s origin/main -- path/to/file\n</code></pre>","tags":["linux"]},{"location":"git/#reset-last-commit","title":"Reset last commit","text":"<pre><code>git reset --hard HEAD^\n</code></pre>","tags":["linux"]},{"location":"git/#reset-last-two-commits","title":"Reset last two commits","text":"<pre><code>git reset --hard HEAD~2\n</code></pre>","tags":["linux"]},{"location":"git/#delete-github-tag","title":"Delete Github Tag","text":"<pre><code>git push --delete origin &lt;tag name&gt;\n</code></pre>","tags":["linux"]},{"location":"git/#unstage-file-that-has-been-added-but-not-commited","title":"Unstage file that has been added but not commited","text":"<pre><code>git restore --staged &lt;file name&gt;\n</code></pre>","tags":["linux"]},{"location":"git/#get-latest-version","title":"Get Latest Version","text":"<p>Strips <code>v</code> and <code>release</code> prefixes</p> <pre><code>curl -sX GET \"https://api.github.com/repos/Jackett/Jackett/releases/latest\" | jq --raw-output '.tag_name'\nversion=\"${version#*v}\"\nversion=\"${version#*release-}\"\n</code></pre>","tags":["linux"]},{"location":"git/#get-latest-commit","title":"Get Latest Commit","text":"<p>Get's the first 7 characters of commit.</p> <pre><code>curl -sX GET https://api.github.com/repos/seejohnrun/haste-server/commits/master | jq --raw-output '. | .sha'\nversion=\"${version#*v}\"\nversion=\"${version#*release-}\"\nversion=\"${version:0:7}\"\n</code></pre>","tags":["linux"]},{"location":"git/#ignore-modified-files","title":"Ignore Modified Files","text":"<pre><code># dir\ngit update-index --assume-unchanged dir-im-removing/\n# or a specific file\ngit update-index --assume-unchanged config/database.yml\n# To get undo/show dir's/files that are set to assume-unchanged run this:\ngit update-index --no-assume-unchanged &lt;file&gt;\n# To get a list of dir's/files that are assume-unchanged run this:\ngit ls-files -v|grep '^h'\n</code></pre>","tags":["linux"]},{"location":"git/#push-tags","title":"Push Tags","text":"<pre><code>git tag\ngit tag v0.4.0\ngit push origin v0.4.0\n</code></pre>","tags":["linux"]},{"location":"git/#push-commit-and-tags-at-the-same-time","title":"Push commit and tags at the same time","text":"<pre><code>git push --atomic origin main v0.4.0\n</code></pre>","tags":["linux"]},{"location":"git/#compare-two-branches","title":"Compare Two Branches","text":"<pre><code>git diff branch1..branch2\n</code></pre> <pre><code>git diff branch1...branch2\n</code></pre>","tags":["linux"]},{"location":"git/#add-file-after-commit","title":"Add File After Commit","text":"<pre><code>git add the_left_out_file\ngit commit --amend --no-edit\n</code></pre>","tags":["linux"]},{"location":"git/#references","title":"References","text":"<ul> <li>Cheat Sheet</li> <li>GitHub Flavored Markdown</li> <li>On undoing, fixing, or removing commits in git</li> <li>Convential Commits</li> <li>Amending a Commit Guide</li> </ul>","tags":["linux"]},{"location":"github-actions/","title":"Github Actions","text":"<pre><code>      - name: Dump github context\n        run:   echo \"$GITHUB_CONTEXT\"\n        shell: bash\n        env:\n          GITHUB_CONTEXT: ${{ toJson(github) }}\n</code></pre> <pre><code>      - name: Get tag\n        run: echo \"tag=${{ github.event.inputs.version }}-${{ github.event.inputs.ls }}\" &gt;&gt; $GITHUB_ENV\n\n      - name: Remove docker from the repo name\n        run: echo \"repo_name=$(echo \"${{ github.event.repository.name }}\" | sed 's/[^-]*-//')\" &gt;&gt; $GITHUB_ENV\n\n      - name: Get current date\n        run: echo \"date=$(date -u +%Y-%m-%dT%H%M%SZ)\" &gt;&gt; $GITHUB_ENV\n\n        build-args: |\n            BUILD_DATE=${{ env.date }}\n            REPO_NAME=${{ env.repo_name }}:\n</code></pre>"},{"location":"github-actions/#setup-task","title":"Setup Task","text":"<pre><code>---\nname: ci\non:  # yamllint disable-line rule:truthy\n  workflow_dispatch:\n\njobs:\n  test_code:\n    name: Test code\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout main\n        uses: actions/checkout@v3\n      - name: Setup Task\n        run: |\n          /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" &amp;&amp; \\\n          brew install go-task/tap/go-task\n</code></pre>"},{"location":"github/","title":"GitHub","text":""},{"location":"github/#find-latest-released-version-without-using-api-and-jq","title":"Find latest released version without using API and jq","text":"<pre><code>curl -s https://github.com/neovim/neovim/releases | \\\n  grep -oP '/neovim/neovim/releases/tag/\\K[^\"]*' | \\\n  grep -E '^v?[0-9]+\\.[0-9]+\\.[0-9]+$'\n</code></pre>"},{"location":"go/","title":"go","text":""},{"location":"go/#install","title":"Install","text":"<p>Figure out how to deal with <code>armv6l</code> and <code>armv7l</code>.</p> <pre><code>(\n  ARCH=\"$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\\(armhf\\)\\(64\\)\\?.*/\\1\\2hf/' -e 's/aarch64$/arm64/')\" &amp;&amp; \\\n  VERSION=\"$(curl https://go.dev/VERSION?m=text)\" &amp;&amp; \\\n  wget \"https://dl.google.com/go/${VERSION}.linux-${ARCH}.tar.gz\" -O- | sudo tar -C /usr/local -xzf -\n)\n</code></pre> <pre><code># ~/.bash_exports\nexport PATH=$PATH:/usr/local/go/bin\nexport GOROOT=/usr/local/go/\n</code></pre>"},{"location":"go/#clear-the-build-cache","title":"Clear the build cache","text":"<pre><code>$ go clean -cache -modcache -i -r\n</code></pre>"},{"location":"go/#get-go-version","title":"Get go version","text":"<pre><code>$ GO_VERSION=$(curl -sSL \"https://go.dev/VERSION?m=text\")\n</code></pre>"},{"location":"go/#init","title":"Init","text":"<pre><code>go mod init project-name\ngo mod tidy\ngo run ./...\n</code></pre>"},{"location":"go/#templates","title":"Templates","text":"<ul> <li>https://docs.gomplate.ca/</li> </ul>"},{"location":"gpg/","title":"GPG","text":"","tags":["linux"]},{"location":"gpg/#generate-key","title":"Generate Key","text":"<pre><code>gpg --full-generate-key\n</code></pre>","tags":["linux"]},{"location":"gpg/#import","title":"Import","text":"<pre><code>lpass show gpg --attach=8017296795546256342-55097 -q | gpg --import\n</code></pre> <pre><code>gpg --import secret.asc\n</code></pre>","tags":["linux"]},{"location":"gpg/#trust-own-key","title":"Trust Own Key","text":"<pre><code># https://unix.stackexchange.com/a/407070/93726\ngpg --edit-key user@useremail.com\n\ngpg&gt; trust\n\nPlease decide how far you trust this user to correctly verify other users' keys\n(by looking at passports, checking fingerprints from different sources, etc.)\n\n  1 = I don't know or won't say\n  2 = I do NOT trust\n  3 = I trust marginally\n  4 = I trust fully\n  5 = I trust ultimately\n  m = back to the main menu\n\nYour decision? 5\ngpg&gt; save\n</code></pre>","tags":["linux"]},{"location":"gpg/#sign-others-keys","title":"Sign Others' Keys","text":"<pre><code>wget http://example.com/pgp-public-key -O- | gpg --import\ngpg -k\ngpg --sign-key theirs@email.com\n</code></pre>","tags":["linux"]},{"location":"gpg/#list","title":"List","text":"<pre><code># Secret keys\ngpg -K --keyid-format LONG\n# All keys\ngpg -k --keyid-format LONG\n</code></pre>","tags":["linux"]},{"location":"gpg/#submit-to-keyserver","title":"Submit to Keyserver","text":"<pre><code>gpg --keyid-format LONG --list-keys john@example.com\npub   rsa4096/ABCDEF0123456789 2018-01-01 [SCEA] [expires: 2021-01-01]\n      ABCDEF0123456789ABCDEF0123456789\nuid              [ ultimate ] John Doe\ngpg --keyserver keyserver.ubuntu.com --send-keys ABCDEF0123456789\n</code></pre>","tags":["linux"]},{"location":"gpg/#revokation-certificate","title":"Revokation Certificate","text":"<pre><code>gpg --output revoke.asc --gen-revoke you@example.com\n</code></pre>","tags":["linux"]},{"location":"gpg/#export","title":"Export","text":"<pre><code>gpg --export-secret-keys --armor $EMAIL &gt; /path/to/secret-key-backup.asc\ngpg --export --armor $EMAIL &gt; /path/to/public-key-backup.asc\n</code></pre>","tags":["linux"]},{"location":"gpg/#keygrip-to-match-key-filenames-in-gnupgprivate-keys-v1d-directory","title":"Keygrip to match <code>*.key</code> filenames in <code>~/.gnupg/private-keys-v1.d</code> directory","text":"<pre><code>gpg -K --with-keygrip\ngpg -k --with-keygrip\n</code></pre>","tags":["linux"]},{"location":"gpg/#get-key-id","title":"Get Key ID","text":"<pre><code>key=$(gpg -k --with-colons \"noreply@email.com\" | awk -F: '/^pub:/ { print $5 }') &amp;&amp; echo \"0x\"${key:(-8)}\n# 0x08B7D7A3\n</code></pre>","tags":["linux"]},{"location":"gpg/#restart-agent-on-windows","title":"Restart Agent on Windows","text":"<pre><code>gpg-connect-agent reloadagent /bye\n</code></pre>","tags":["linux"]},{"location":"gpg/#refresh-keys","title":"Refresh Keys","text":"<pre><code>gpg --refresh-keys --keyserver keyserver.ubuntu.com\n</code></pre>","tags":["linux"]},{"location":"gpg/#pinentry-mode","title":"Pinentry Mode","text":"<pre><code>gpg --pinentry-mode loopback --import &lt;file&gt;.asc\n</code></pre>","tags":["linux"]},{"location":"gpg/#validity-unknown","title":"Validity Unknown","text":"<pre><code>gpg --check-trustdb\ngpg --update-trustdb\n</code></pre>","tags":["linux"]},{"location":"gpg/#show-subkey-fingerprints","title":"Show Subkey Fingerprints","text":"<pre><code>gpg -K --with-subkey-fingerprints\n</code></pre>","tags":["linux"]},{"location":"gpg/#unlock-key","title":"Unlock Key","text":"<p>To manually force a passphrase prompt and \"unlock\" the key, you can run a simple GPG command that requires it, such as:</p> <pre><code>gpg -s\n</code></pre> <p>This command initiates a signature process on standard input. It will prompt you to type some text and then ask for your passphrase to sign it. Once you've entered the passphrase, you can press Ctrl+D twice to exit the command. Your key will then be unlocked and cached by gpg-agent.</p> <p>Type something.</p>","tags":["linux"]},{"location":"gpg/#references","title":"References","text":"<ul> <li>https://ruimarinho.gitbooks.io/yubikey-handbook/content/openpgp/troubleshooting/gpg-failed-to-sign-the-data.html</li> <li>https://devhints.io/gnupg</li> </ul>","tags":["linux"]},{"location":"helm/","title":"Helm","text":""},{"location":"helm/#installation","title":"Installation","text":"<pre><code>brew install helm\n</code></pre>"},{"location":"helm/#helm-docs","title":"helm-docs","text":"<pre><code>brew install norwoodj/tap/helm-docs\n</code></pre>"},{"location":"home-assistant/","title":"Home Assistant","text":""},{"location":"home-assistant/#install","title":"Install","text":"<pre><code>mkdir ~/ha\ndocker run -d \\\n  --name homeassistant \\\n  --privileged \\\n  --restart=unless-stopped \\\n  -e TZ=America/Los_Angeles \\\n  -v /home/nicholas/ha:/config \\\n  --network=host \\\n  ghcr.io/home-assistant/home-assistant:stable\n</code></pre>"},{"location":"homelab/","title":"Homelab","text":"","tags":["homelab","linux","proxmox"]},{"location":"homelab/#grafana","title":"Grafana","text":"","tags":["homelab","linux","proxmox"]},{"location":"homelab/#install","title":"Install","text":"<pre><code># amd64\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/grafana.sh)\"\n</code></pre> <pre><code># arm64\nbash -c \"$(wget -qLO - https://github.com/asylumexp/Proxmox/raw/main/ct/grafana.sh)\"\n</code></pre>","tags":["homelab","linux","proxmox"]},{"location":"homelab/#passwordless-login","title":"Passwordless Login","text":"<pre><code># /etc/grafana/grafana.ini\n#################################### Anonymous Auth ##########################\n[auth.anonymous]\n# enable anonymous access\nenabled = true\n\n# specify organization name that should be used for unauthenticated users\norg_name = ORGANIZATION\n</code></pre>","tags":["homelab","linux","proxmox"]},{"location":"homelab/#prometheus","title":"Prometheus","text":"","tags":["homelab","linux","proxmox"]},{"location":"homelab/#install_1","title":"Install","text":"<pre><code># amd64\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/prometheus.sh)\"\n</code></pre> <pre><code># arm64\nbash -c \"$(wget -qLO - https://github.com/asylumexp/Proxmox/raw/main/ct/prometheus.sh)\"\n</code></pre>","tags":["homelab","linux","proxmox"]},{"location":"homelab/#enable-lifecycle-reload","title":"Enable Lifecycle Reload","text":"<pre><code># /etc/systemd/system/prometheus.service\n...\nExecStart= ... --web.enable-lifecycle\n</code></pre> <p>Restart service</p> <pre><code>curl -X POST http://127.0.0.1:9090/-/reload\n</code></pre> <p>Add node</p> <pre><code># /etc/prometheus/prometheus.yml\n...\nscrape_configs:\n  - job_name: 'yourservername'\n    static_configs:\n      - targets:\n        - yourserverip:9100\n        labels:\n          instance: 'pve01'\n    metrics_path: /metrics\n    scrape_interval: 60s\n</code></pre>","tags":["homelab","linux","proxmox"]},{"location":"homelab/#node","title":"Node","text":"<p>In repo</p> <pre><code>apt install prometheus-node-exporter -y\n</code></pre> <p>As root and prometheus-node-exporter is not in repo</p> <pre><code>wget https://github.com/prometheus/node_exporter/releases/latest/tar.gz\ntar -xvf tar.gz\ncd node_exporter\nmv node_exporter /usr/local/bin/\n</code></pre> <pre><code># /etc/systemd/system/node_exporter.service \n[Unit]\nDescription=Prometheus exporter for machine metrics\nDocumentation=https://github.com/prometheus/node_exporter\n\n[Service]\nRestart=on-failure\nUser=root\nEnvironmentFile=/etc/default/prometheus-node-exporter\nExecStart=/usr/local/bin/node_exporter $ARGS\nExecReload=/bin/kill -HUP $MAINPID\nTimeoutStopSec=20s\nSendSIGKILL=no\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <pre><code>systemctl daemon-reload\nsystemctl enable node_exporter.service\nsystemctl start node_exporter.service\njournalctl -xeu node_exporter.service\n</code></pre> <p>Test</p> <pre><code>curl \"http://localhost:9100/metrics\"\n</code></pre>","tags":["homelab","linux","proxmox"]},{"location":"homelab/#references","title":"References","text":"<ul> <li>InfluxDB</li> </ul>","tags":["homelab","linux","proxmox"]},{"location":"images/","title":"Images","text":""},{"location":"images/#github-badges","title":"GitHub Badges","text":"<p>Custom images</p> <p>Encode to 64 bit</p> <p>https://www.base64-image.de/</p> <p>https://simpleicons.org/</p>"},{"location":"kind/","title":"Kind","text":""},{"location":"kind/#installation","title":"Installation","text":"<pre><code>brew install kind\n</code></pre>"},{"location":"kind/#usage","title":"Usage","text":""},{"location":"kind/#create-a-cluster","title":"Create a Cluster","text":"<pre><code>kind create cluster\n</code></pre>"},{"location":"kind/#ctx","title":"ctx","text":"<pre><code>kubectl krew install ctx\n</code></pre>"},{"location":"kubernetes/","title":"Kubernetes","text":""},{"location":"kubernetes/#pause-a-pod","title":"Pause a pod","text":"<p><code>kubectl scale --replicas=0 deployment/&lt;your-deployment&gt;</code></p>"},{"location":"kubernetes/#kubectl","title":"kubectl","text":""},{"location":"kubernetes/#installation","title":"Installation","text":"Ubuntu<pre><code>brew install kubectl\n</code></pre>"},{"location":"kubernetes/#krew","title":"krew","text":"<pre><code>(\n  set -x; cd \"$(mktemp -d)\" &amp;&amp;\n  curl -fsSLO \"https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz\" &amp;&amp;\n  tar zxvf krew.tar.gz &amp;&amp;\n  KREW=./krew-\"$(uname | tr '[:upper:]' '[:lower:]')_$(uname -m | sed -e 's/x86_64/amd64/' -e 's/arm.*$/arm/' -e 's/aarch64$/arm64/')\" &amp;&amp;\n  \"$KREW\" install krew\n)\n</code></pre> Update<pre><code>kubectl krew version\n</code></pre>"},{"location":"kubernetes/#ns","title":"ns","text":"<pre><code>kubectl krew install ns\n</code></pre>"},{"location":"kubernetes/#short-names-list","title":"Short Names List","text":"<pre><code>kubectl api-resources\n</code></pre>"},{"location":"kubernetes/#knsk","title":"knsk","text":"<pre><code>wget -q https://raw.githubusercontent.com/thyarles/knsk/master/knsk.sh -O - | bash\n</code></pre>"},{"location":"kubernetes/#usage","title":"Usage","text":""},{"location":"kubernetes/#switch-contexts-multiple-clusters","title":"Switch Contexts (Multiple Clusters)","text":"<pre><code>kubectl config use-context CONTEXT_NAME\n</code></pre>"},{"location":"kubernetes/#config","title":"Config","text":"<pre><code>WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/nicholas/.kube/config-turing-pi\n</code></pre> <pre><code>chmod 600 /home/nicholas/.kube/config-turing-pi\n</code></pre>"},{"location":"kubernetes/#change-the-reclaim-policy-of-a-persistentvolume","title":"Change the Reclaim Policy of a PersistentVolume","text":"<p>List the PersistentVolumes in your cluster:</p> <pre><code>kubectl get pv\n</code></pre> <p>Choose one of your PersistentVolumes and change its reclaim policy:</p> <pre><code>kubectl patch pv &lt;your-pv-name&gt; -p '{\"spec\":{\"persistentVolumeReclaimPolicy\":\"Retain\"}}'\n</code></pre> <p>Apply ROLE label to worker nodes (#379).</p> <pre><code>kubectl label node worker-02 node-role.kubernetes.io/worker=worker\nNAME          STATUS   ROLES    AGE    VERSION\nturing-main   Ready    master   106m   v1.19.9+k3s1\nworker-07     Ready    worker   105m   v1.19.9+k3s1\nworker-06     Ready    worker   105m   v1.19.9+k3s1\nworker-05     Ready    worker   105m   v1.19.9+k3s1\nworker-04     Ready    worker   105m   v1.19.9+k3s1\nworker-03     Ready    worker   105m   v1.19.9+k3s1\nworker-02     Ready    worker   105m   v1.19.9+k3s1\n</code></pre>"},{"location":"kubernetes/#get-a-shell-to-the-running-container","title":"Get a shell to the running container","text":"<pre><code>kubectl exec --stdin --tty pod/name -- /bin/bash\n</code></pre>"},{"location":"kubernetes/#cheat-sheet","title":"Cheat Sheet","text":""},{"location":"kubernetes/#config-permissions","title":"Config Permissions","text":"<pre><code>chmod go-r ~/.kube/config\n</code></pre>"},{"location":"kubernetes/#resources","title":"Resources","text":"<ul> <li>keel</li> <li>flux2</li> <li>rook ceph</li> <li>k3s</li> <li>taskfile</li> <li>helm-docs</li> <li>OpenEBS</li> </ul>"},{"location":"lastpass/","title":"LastPass","text":""},{"location":"lastpass/#installation","title":"Installation","text":"<pre><code>brew install lastpass-cli\n</code></pre>"},{"location":"lastpass/#login","title":"Login","text":"<pre><code>mkdir -p ~/.local/share/lpas\nlpass login &lt;email&gt;\n</code></pre>"},{"location":"lastpass/#show-attachment","title":"Show Attachment","text":"<pre><code>lpass show ssh --attach=&lt;attachment id&gt;\n</code></pre>"},{"location":"lastpass/#rename-item","title":"Rename Item","text":"<pre><code>echo \"${new_name}\" | lpass edit --non-interactive --name \"${id}\"\n</code></pre>"},{"location":"lastpass/#export-as-json","title":"Export as JSON","text":"<pre><code>lpass show --expand-multi --basic-regexp '.*' --json\n</code></pre>"},{"location":"lastpass/#lpass-login-returns-unknown","title":"lpass login returns 'unknown'","text":"<p>$ lpass login username@email.com  Please enter the LastPass master password for username@email.com.</p> <p>unknown Master Password:</p> <p>A workaround is to:</p> <ol> <li>Open Account Settings in your browser (Open My Vault \u2192 Account Settings)</li> <li>Press Show Advanced Settings</li> <li>Set General \u2192 Security \u2192 Password Iterations to exactly 100100</li> </ol> <p>LastPass will ask for your Master password and re-encrypt your vault. After that using lpass should work again.</p>"},{"location":"lastpass/#references","title":"References","text":"<ul> <li>https://github.com/lastpass/lastpass-cli</li> </ul>"},{"location":"make/","title":"make","text":""},{"location":"make/#help","title":"Help","text":"<p>Display the help</p> <pre><code>...\n.PHONY: test\ntest: shellcheck yamllint ## Runs all the tests on the files in the repository.\n\n.PHONY: help\nhelp:\n  @grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n...\n</code></pre> <p>Output</p> <pre><code>shellcheck                     Runs the shellcheck tests on the scripts.\nhelp\n</code></pre> <p>Alternative</p> <pre><code>...\n## test   : Test the image with snyk\ntest:\n  snyk container test $(NS)/$(IMAGE_NAME):$(VERSION)-ls$(LS) --file=Dockerfile\n\n## help   : Show help\nhelp: Makefile\n  @sed -n 's/^##//p' $&lt;\n...\n</code></pre> <p>Output</p> <pre><code>test   : Test the image with snyk\nhelp   : Show help\n</code></pre>"},{"location":"markdown/","title":"Markdown","text":""},{"location":"markdown/#highlighting-diff-blockcode","title":"Highlighting Diff Blockcode","text":"<pre><code>name: Main\n\non: push\n\njobs:\n  main:\n+   timeout-minutes: 5\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n      - name: Turnstyle\n        uses: softprops/turnstyle@v1\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n      - name: Deploy\n        run: sleep 30\n</code></pre>"},{"location":"markdown/#references","title":"References","text":"<ul> <li>GFM</li> <li>Emojipedia</li> <li>Languages</li> </ul>"},{"location":"micro/","title":"Micro","text":""},{"location":"micro/#install","title":"Install","text":"<pre><code>brew install micro\n</code></pre>"},{"location":"micro/#wakatime","title":"Wakatime","text":"<pre><code>micro -plugin install wakatime\ntouch ~/.wakatime.cfg\n# copy api_key to clipboard\nlpass show 1247588986144505823 --password | copy\n# from inside micro press ctrl+e\nwakatime.apikey\n</code></pre>"},{"location":"micro/#set-filetype","title":"Set Filetype","text":"<pre><code>Ctrl + e\nset filetype yaml\n</code></pre> ~/.config/micro/settings.json<pre><code>{\n    \"/etc/default/grub\": {\n        \"filetype\": \"bash\"\n    }\n}\n</code></pre>"},{"location":"micro/#references","title":"References","text":"<ul> <li>https://github.com/zyedidia/micro/blob/master/runtime/help/options.md</li> <li>https://github.com/zyedidia/micro/blob/master/runtime/help/commands.md</li> <li>https://github.com/zyedidia/micro/blob/master/runtime/help/keybindings.md</li> <li>Micro Key Bindings</li> </ul>"},{"location":"misc/","title":"Misc","text":""},{"location":"misc/#paperkey","title":"Paperkey","text":"<p>Export gpg key to a printable version</p> <p>https://wiki.archlinux.org/index.php/Paperkey</p>"},{"location":"misc/#public-keys","title":"Public Keys","text":"<ul> <li>GPG</li> <li>SSH</li> </ul>"},{"location":"misc/#timezone","title":"Timezone","text":"<pre><code>$ sudo timedatectl set-timezone America/Los_Angeles\n</code></pre>"},{"location":"misc/#images","title":"Images","text":""},{"location":"misc/#imagemagick","title":"Imagemagick","text":"<pre><code># Ubuntu\n$ sudo apt-get install sudo apt install imagemagick-6.q16hdri\n# Convert image from ico to png\n$ convert \"favicon.ico\" -thumbnail 16x16 -alpha on -background none -flatten \"favicon.png\"\n</code></pre>"},{"location":"misc/#shred","title":"Shred","text":"<p>Overwrite the data of file1.txt, file2.jpg, and file3.doc using the default shredding methods.</p> <pre><code>$ shred -u file1.txt file2.jpg file3.doc\n</code></pre>"},{"location":"misc/#combine-pdfs","title":"Combine PDFs","text":"<pre><code>$ qpdf --empty --pages *.pdf -- out.pdf\n</code></pre>"},{"location":"misc/#list-if-a-package-is-installed","title":"List if a Package is Installed","text":"<pre><code>apt -qq list &lt;package name&gt;\n</code></pre>"},{"location":"misc/#disk-free-space","title":"Disk Free Space","text":"<pre><code>df -h\n</code></pre>"},{"location":"misc/#list-hardware","title":"List Hardware","text":"<pre><code>sudo lshw -short\n</code></pre>"},{"location":"misc/#uid","title":"UID","text":"<pre><code>id -u $(whoami)\n</code></pre>"},{"location":"misc/#gid","title":"GID","text":"<pre><code>id -g $(whoami)\n</code></pre>"},{"location":"misc/#screen","title":"Screen","text":"Quit a session<pre><code>screen -XS &lt;session-id&gt; quit\n</code></pre> Check current session<pre><code>echo $STY\n</code></pre> Detached the previous screen and allowed me to reattach.<pre><code>screen -d -r\n</code></pre> Scroll upward in the terminal<pre><code>C-a [\n</code></pre>"},{"location":"misc/#replace-entire-line-in-file","title":"Replace Entire Line in File","text":"<pre><code>sed -i \"s|^type     =.*$|type     = mysql|g\" config.ini\n</code></pre>"},{"location":"misc/#keepachangelog","title":"keepachangelog","text":""},{"location":"misc/#quit-screen-sessions","title":"Quit Screen Sessions","text":"List screen ids<pre><code>screen -list\n</code></pre> Quit the session<pre><code>screen -XS &lt;session-id&gt; quit\n</code></pre>"},{"location":"misc/#references","title":"References","text":"<ul> <li>https://www.geeksforgeeks.org/shred-command-in-linux-with-examples/</li> </ul>"},{"location":"multipass/","title":"multipass","text":"<pre><code>$ sudo snap install multipass\n$ multipass launch --name foo\n$ multipass exec foo -- lsb_release -a\n# List your instances\n$ multipass list\n# Stop your instance\n$ multipass stop foo bar\n# Start your instance\n$ multipass start foo\n# Clean up what you don\u2019t need\n$ multipass delete bar\n$ multipass purge\n# Find alternate images to launch with multipass\n$ multipass find\n</code></pre>"},{"location":"multipass/#references","title":"References","text":"<ul> <li>https://multipass.run/</li> </ul>"},{"location":"neovim/","title":"Neovim","text":"<p>My cheatsheet for neovim</p>"},{"location":"neovim/#installation","title":"Installation","text":"<pre><code>sudo apt install neovim\n</code></pre>"},{"location":"neovim/#lazyvim","title":"Lazyvim","text":"<p>Make a backup of your current Neovim files</p> <pre><code># required\n(\n  mv ~/.config/nvim{,.bak}\n\n  # optional but recommended\n  mv ~/.local/share/nvim{,.bak}\n  mv ~/.local/state/nvim{,.bak}\n  mv ~/.cache/nvim{,.bak}\n  git clone https://github.com/LazyVim/starter ~/.config/nvim\n  rm -rf ~/.config/nvim/.git\n  nvim\n)\n</code></pre> <p>Tip</p> <p>It is recommended to run <code>:LazyHealth</code> after installation. This will load all plugins and check if everything is working correctly.</p>"},{"location":"neovim/#logic","title":"Logic","text":"<ul> <li> <p><code>A|a</code> - Append / Around</p> <ul> <li><code>a</code>ppend text after the cursor</li> <li><code>A</code>ppend text after the line</li> </ul> </li> <li> <p><code>B|b</code> - Back / Beginning</p> <ul> <li>move <code>b</code>ackwards one word</li> <li>move <code>B</code>ackwards \"big\" word</li> </ul> </li> <li> <p><code>C|c</code> - Change</p> <ul> <li><code>c</code>hange in  <li><code>C</code>hange from here</li> <li> <p><code>D|d</code> - Delete</p> <ul> <li><code>d</code>elete code enclosed in  <li><code>D</code>elete from here | <code>DD</code> delete line</li> <li> <p><code>E|e</code> - End</p> <ul> <li><code>e</code>nd of a word</li> <li><code>E</code>nd of a \"big\" word | <code>E</code>nd of line2</li> </ul> </li> <li> <p><code>F|f</code> - Find</p> <ul> <li><code>f</code>ind a character</li> <li><code>F</code>ind backwards</li> </ul> </li> <li> <p><code>G|g</code> - Find</p> <ul> <li><code>g</code>o to || <code>gg g</code>o to end of document</li> <li><code>G</code>o to | <code>GG G</code>o to beginning</li> </ul> </li> <li> <p><code>I|i</code> - Insert</p> <ul> <li><code>i</code>nsert text before cursor</li> <li><code>I</code>nsert text before line</li> </ul> </li> <li> <p><code>m</code> - Mark</p> <ul> <li><code>m</code>ark position to register</li> </ul> </li> <li> <p><code>N|n</code> - Next</p> <ul> <li><code>n</code>ext result forward</li> <li><code>N</code>ext result backward</li> </ul> </li> <li> <p><code>O|o</code> - Open Line</p> <ul> <li><code>o</code>pen line bef<code>o</code>re</li> <li><code>O</code>pen line ab<code>O</code>ve</li> </ul> </li> <li> <p><code>P|p</code> - Past / Paragraph</p> <ul> <li><code>p</code>aste after cursor |  in <code>p</code>aragraph <li><code>P</code>aste before cursor</li> <li> <p><code>q</code> - Re'q'ord Ma'q'ros</p> <ul> <li>re<code>q</code>ord a macro to  <li> <p><code>R|e</code> - Replace | Redo</p> <ul> <li><code>r</code>eplace under the cursor</li> <li><code>R</code>eplace until stopped</li> <li><code>R</code>edo (CTRL+R)</li> </ul> </li> <li> <p><code>S|s</code> - Switch</p> <ul> <li><code>s</code>witch character (and keep on)</li> <li><code>S</code>witch line</li> </ul> </li> <li> <p><code>T|t</code> - To</p> <ul> <li>(do something) <code>t</code>o character</li> <li><code>T</code>o character (backwards)</li> </ul> </li> <li> <p><code>U|u</code> - </p> </li>"},{"location":"neovim/#moving-inside-a-file","title":"Moving Inside a File","text":"<p>You can move the cursor within a file by single characters, words, tokens, or lines.</p> <p>According to Vim, a word can be a group of letters, numbers, and underscores. On the other hand, a token is anything separated by whitespace and can include punctuation.</p> <p>Additionally, you can move to different parts of a text by screen view.</p>"},{"location":"neovim/#moving-by-characters-words-and-tokens","title":"Moving by Characters, Words and Tokens","text":"<p>The basic keys for moving the cursor by one character are:</p> <ul> <li>h \u2013 move the cursor left</li> <li>j \u2013 move the cursor down</li> <li>k \u2013 move the cursor up</li> <li>l \u2013 move the cursor right</li> </ul> <p>You can also use these keys with a number as a prefix to move in a specified direction multiple times. For example, if you run 5j the cursor moves down 5 lines.</p> <ul> <li>b \u2013 move to the start of a word</li> <li>B \u2013 move to the start of a token</li> <li>w \u2013 move to the start of the next word</li> <li>W \u2013 move to the start of the next token</li> <li>e \u2013 move to the end of a word</li> <li>E \u2013 move to the end of a token</li> </ul> <p>For instance, you have the noun phrase \u201cstep-by-step\u201d as part of a text and the cursor is placed at the end of it. The first time you press b, the cursor  moves back to \u201cstep-by-step\u201d. However, if you use B, the cursor moves all the way back to: \u201cstep-by-step\u201d since there is no whitespace between these characters.</p>"},{"location":"neovim/#moving-by-lines","title":"Moving by Lines","text":"<ul> <li>0 (zero) \u2013 jump to the beginning of the line</li> <li>$ \u2013 jump to the end of the line</li> <li>^ \u2013 jump to the first (non-blank) character of the line</li> <li> </li> </ul>"},{"location":"neovim/#g-gg-move-to-a-specified-line-number-replace-with-the-line-number","title":"G / #gg / :# \u2013 move to a specified line number (replace # with the line number)","text":""},{"location":"neovim/#moving-by-screens","title":"Moving by Screens","text":"<p>The following commands are used as a quick way to move within the text without scrolling.</p> <ul> <li>Ctrl + b \u2013 move back one full screen</li> <li>Ctrl + f \u2013 move forward one full screen</li> <li>Ctrl + d \u2013 move forward \u00bd a screen</li> <li>Ctrl + u \u2013 move back \u00bd a screen</li> <li>Ctrl + e \u2013 move screen down one line (without moving the cursor)</li> <li>Ctrl + y \u2013 move screen up one line (without moving the cursor)</li> <li>Ctrl + o \u2013 move backward through the jump history</li> <li>Ctrl + i \u2013 move forward through the jump history</li> <li>H \u2013 move to the top of the screen (H=high)</li> <li>M \u2013 move to the middle of the screen (M=middle)</li> <li>L \u2013 move to the bottom of the screen (L=low)</li> </ul>"},{"location":"neovim/#inserting-text","title":"Inserting Text","text":"<ul> <li>i \u2013 switch to insert mode before the cursor</li> <li>I \u2013 insert text at the beginning of the line</li> <li>a \u2013 switch to insert mode after the cursor</li> <li>A \u2013 insert text at the end of the line</li> <li>o \u2013 open a new line below the current one</li> <li>O \u2013 open a new line above the current one</li> <li>ea \u2013 insert text at the end of the word</li> <li>Esc \u2013 exit insert mode; switch to command mode</li> </ul> <p>Some of these commands switch between command and insert mode. By default, Vim launches in command mode, allowing you to move around and edit the file. To switch to command mode, use the Esc key.</p>"},{"location":"neovim/#editing-text","title":"Editing Text","text":"<ul> <li><code>r</code> \u2013 replace a single character (and return to command mode)</li> <li><code>cc</code> \u2013 replace an entire line (deletes the line and moves into insert mode)</li> <li><code>C / c$</code> \u2013 replace from the cursor to the end of a line</li> <li><code>cw</code> \u2013 replace from the cursor to the end of a word</li> <li><code>s</code> \u2013 delete a character (and move into insert mode)</li> <li><code>J</code> \u2013 merge the line below to the current one with a space in between them</li> <li><code>gJ</code> \u2013 merge the line below to the current one with no space in between them</li> <li><code>u</code> \u2013 undo</li> <li><code>Ctrl + r</code> \u2013 redo</li> <li><code>.</code> \u2013 repeat last command</li> </ul>"},{"location":"neovim/#cutting-copying-and-pasting","title":"Cutting, Copying And Pasting","text":"<ul> <li><code>yy</code> \u2013 copy (yank) entire line</li> <li><code>#yy</code> \u2013 copy the specified number of lines</li> <li><code>dd</code> \u2013 cut (delete) entire line</li> <li><code>#dd</code> \u2013 cut the specified number of lines</li> <li><code>p</code> \u2013 paste after the cursor</li> <li><code>P</code> \u2013 paste before the cursor</li> </ul>"},{"location":"neovim/#marking-text-visual-mode","title":"Marking Text (Visual Mode)","text":"<p>Apart from command mode and insert mode, Vim also includes visual mode. This mode is mainly used for marking text.</p> <p>Based on the chunk of text you want to select, you can choose between three versions of visual mode: character mode, line mode, and block mode.</p> <ul> <li><code>v</code> \u2013 select text using character mode</li> <li><code>V</code> \u2013 select lines using line mode</li> <li><code>Ctrl+v</code> \u2013 select text using block mode</li> <li><code>o</code> \u2013 move from one end of the selected text to the other</li> <li><code>aw</code> \u2013 select a word</li> <li><code>ab</code> \u2013 select a block with ()</li> <li><code>aB</code> \u2013 select a block with {}</li> <li><code>at</code> \u2013 select a block with &lt;&gt;</li> <li><code>ib</code> \u2013 select inner block with ()</li> <li><code>iB</code> \u2013 select inner block with {}</li> <li><code>it</code> \u2013 select inner block with &lt;&gt;</li> </ul>"},{"location":"neovim/#visual-commands","title":"Visual Commands","text":"<p>Once you have selected the desired text in visual mode, you can use one of the visual commands to manipulate it. Some of them include:</p> <ul> <li><code>y</code> \u2013 yank (copy) the marked text</li> <li><code>d</code> \u2013 delete (cut) the marked text</li> <li><code>p</code> \u2013 paste the text after the cursor</li> <li><code>u</code> \u2013 change the market text to lowercase</li> <li><code>U</code> \u2013 change the market text to uppercase</li> </ul>"},{"location":"neovim/#search-in-file","title":"Search in File","text":"<ul> <li><code>*</code> \u2013 jump to the next instance of the current word</li> <li><code>#</code> \u2013 jump to previous instance of the current word</li> <li><code>/pattern</code> \u2013 search forward for the specified pattern</li> <li><code>?pattern</code> \u2013 search backward for the specified pattern</li> <li><code>n</code> \u2013 repeat the search in the same direction</li> <li><code>N</code> \u2013 repeat the search in the opposite direction</li> </ul>"},{"location":"neovim/#saving-and-exiting-file","title":"Saving and Exiting File","text":"<ul> <li><code>:w</code> \u2013 save the file</li> <li><code>:wq</code> / :x / ZZ \u2013 save and close the file</li> <li><code>:q</code> \u2013 quit</li> <li><code>:q!/ ZQ</code> \u2013 quit without saving changes</li> <li><code>:w new_file_name</code> \u2013 save the file under a new name and continue editing the original</li> <li><code>:sav</code> \u2013 save the file under a new name and continue editing the new copy</li> <li><code>:w !sudo tee %</code> \u2013 write out the file using sudo and tee command</li> </ul>"},{"location":"neovim/#working-with-multiple-files","title":"Working with Multiple Files","text":"<ul> <li><code>:e file_name</code>  \u2013 open a file in a new buffer</li> <li><code>:bn</code>  \u2013 move to the next buffer</li> <li><code>:bp</code> \u2013 go back to previous buffer</li> <li><code>:bd</code>  \u2013 close buffer</li> <li><code>:b#</code>  \u2013 move to the specified buffer (by number)</li> <li><code>:b</code> file_name \u2013 move to a buffer (by name)</li> <li><code>:ls</code> \u2013 list all open buffers</li> <li><code>:sp file_name</code>  \u2013 open a file in a new buffer and split viewport horizontally</li> <li><code>:vs file_name</code>  \u2013 open a file in a new buffer and split viewport vertically</li> <li><code>:vert ba</code>  \u2013 edit all files as vertical viewports</li> <li><code>:tab ba</code>  \u2013 edit all buffers as tabs</li> <li><code>gt</code> \u2013 move to next tab</li> <li><code>gT</code> \u2013 move to previous tab</li> <li><code>Ctrl+ws</code> \u2013 split viewport</li> <li><code>Ctrl+wv</code> \u2013 split viewport vertically</li> <li><code>Ctrl+ww</code> \u2013 switch viewports</li> <li><code>Ctrl+wq</code> \u2013 quit a viewport</li> <li><code>Ctrl+wx</code> \u2013 exchange current viewport with next one</li> <li><code>Ctrl+=</code> \u2013 make all viewports equal in height and width</li> </ul>"},{"location":"neovim/#marks-and-jumps","title":"Marks and Jumps","text":"<ul> <li>m[a-z] \u2013 mark text using character mode (from a to z)</li> <li>M[a-z] \u2013 mark lines using line mode (from a to z)</li> <li>`a - jump to position marked a</li> <li><code>y</code>a \u2013 yank text to position marked &gt;a&gt;</li> <li>`. \u2013 jump to last change in file</li> <li>`0 \u2013 jump to position where Vim was last exited</li> <li>`` \u2013 jump to last jump</li> <li>:marks \u2013 list all marks</li> <li>:jumps \u2013 list all jumps</li> <li><code>:changes</code> \u2013 list all changes</li> <li><code>Ctrl+i</code> \u2013 move to next instance in jump list</li> <li><code>Ctrl+o</code> \u2013 move to previous instance in jump list</li> <li><code>g,</code> \u2013 move to next instance in change list</li> <li><code>g;</code> \u2013 move to previous instance in change list</li> </ul>"},{"location":"neovim/#macros","title":"Macros","text":"<ul> <li><code>qa</code>  \u2013 record macro a</li> <li><code>q</code>  \u2013 stop recording macro</li> <li><code>@a</code>  \u2013 run macro a</li> <li><code>@@</code>  \u2013 run last macro again</li> </ul>"},{"location":"neovim/#enabling-vim-color-schemes","title":"Enabling Vim Color Schemes","text":"<ul> <li><code>:colorscheme [colorscheme_name]</code>  \u2013 change to specified scheme</li> <li><code>:colorscheme [space]+Ctrl+d</code> \u2013 list available Vim color scheme</li> </ul>"},{"location":"neovim/#references","title":"References","text":"<ul> <li>https://phoenixnap.com/kb/vim-commands-cheat-sheet</li> <li>https://youtu.be/RZ4p-saaQkc?si=Lx1eJVe8P5eTpkNi</li> </ul>"},{"location":"nfs/","title":"NFS","text":""},{"location":"nfs/#server","title":"Server","text":"<pre><code>sudo apt install nfs-kernel-server\nsudo systemctl start nfs-kernel-server.service\n</code></pre> <pre><code># /etc/exports\n/srv/storage     *(rw,sync,subtree_check)\n</code></pre> <pre><code>sudo exportfs -a\n</code></pre>"},{"location":"nfs/#client","title":"Client","text":"<pre><code>mkdir ~/nas\nsudo apt install nfs-common\n</code></pre> <pre><code>showmount -e 192.168.1.192\n</code></pre> <pre><code>df -h\n</code></pre> <pre><code>sudo apt install autofs\n# /etc/auto.master\n...\n/mnt /etc/auto.nfs --ghost --timeout=60\n\n# /etc/auto.nfs\nstorage -fstype=nfs4,rw 192.168.1.192:/srv/storage\n</code></pre> <pre><code># /etc/fstab\nUUID=1FDD-27B1  /boot   vfat    defaults        0       0\nUUID=b264f4c6-8797-4ed5-99db-e85ceebc1db4  /   ext4    defaults        0       0\n192.168.1.192:/home/pi/nas /home/pi/nas nfs rw,async,hard,intr 0 0\n</code></pre> <pre><code>echo \"192.168.1.192:/home/pi/nas ${HOME}/nas nfs rw,async,hard,intr 0 0\" | sudo tee -a /etc/fstab\nsudo mount -a\n</code></pre>"},{"location":"nfs/#references","title":"References","text":"<ul> <li>How To Partition and Format Storage Devices in Linux</li> </ul>"},{"location":"nixos/","title":"NixOS","text":""},{"location":"nixos/#managed-node","title":"Managed Node","text":"<pre><code>TEMPLATE_STORAGE='pve-shared'\n# Name of the template file downloaded from Hydra.\nTEMPLATE_FILE='nixos-system-x86_64-linux.tar.xz'\n# Name to assign to new NixOS container.\nCONTAINER_HOSTNAME='nixos'\n# Which storage location to place the new NixOS container.\nCONTAINER_STORAGE='local-lvm'\n# How much RAM to assign the new container.\nCONTAINER_RAM_IN_MB='8192'\n# How much disk space to assign the new container.\nCONTAINER_DISK_SIZE_IN_GB='80'\n</code></pre> <pre><code>pct create \"$(pvesh get /cluster/nextid)\" \\\n  --arch amd64 \\\n  \"${TEMPLATE_STORAGE}:vztmpl/${TEMPLATE_FILE}\" \\\n  --ostype unmanaged \\\n  --description nixos \\\n  --hostname \"${CONTAINER_HOSTNAME}\" \\\n  --net0 name=eth0,bridge=vmbr0,ip=dhcp,firewall=1 \\\n  --storage \"${CONTAINER_STORAGE}\" \\\n  --memory \"${CONTAINER_RAM_IN_MB}\" \\\n  --rootfs ${CONTAINER_STORAGE}:${CONTAINER_DISK_SIZE_IN_GB} \\\n  --unprivileged 1 \\\n  --features nesting=1 \\\n  --cmode console \\\n  --onboot 1 \\\n  --start 1\n</code></pre>"},{"location":"nixos/#lxc","title":"LXC","text":"<pre><code>(\n  GITHUB_USERNAME='nicholaswilde'\n  mkdir -p ~/.ssh &amp;&amp; \\\n    curl \"https://github.com/${GITHUB_USERNAME}.keys\" &gt; ~/.ssh/authorized_keys\n)\n</code></pre> <pre><code>(\n  curl \\\n    --show-error \\\n    --fail \\\n    https://mtlynch.io/notes/nixos-proxmox/configuration.nix \\\n    &gt; /etc/nixos/configuration.nix\n\n  nix-channel --update &amp;&amp; \\\n    nixos-rebuild switch --upgrade &amp;&amp; \\\n    echo \"install complete, rebooting...\" &amp;&amp; \\\n    poweroff --reboot\n)\n</code></pre> <pre><code>nano /etc/nixos/configuration.nix\n</code></pre> <pre><code>(\n  nix-channel --update\n  nixos-rebuild switch --upgrade\n)\n</code></pre>"},{"location":"nixos/#references","title":"References","text":"<ul> <li>https://mtlynch.io/notes/nixos-proxmox/</li> <li>https://hydra.nixos.org/project/nixos</li> <li>https://search.nixos.org/</li> <li>https://hydra.nixos.org/job/nixos/release-24.11/nixos.lxdContainerImage.aarch64-linux</li> <li>https://hydra.nixos.org/job/nixos/release-24.11/nixos.lxdContainerImage.x86_64-linux</li> </ul>"},{"location":"npm/","title":"npm","text":""},{"location":"npm/#installation","title":"Installation","text":"<pre><code>(\n  sudo apt install build-essential libssl-dev curl git-core\n  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$(curl -s \"https://api.github.com/repos/nvm-sh/nvm/releases/latest\" | grep '\"tag_name\":' | cut -d'\"' -f4)/install.sh | bash &amp;&amp; \\\n  export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] &amp;&amp; printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\" &amp;&amp; \\\n  [ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\" # This loads nvm &amp;&amp; \\\n  nvm install node\n)\n</code></pre>"},{"location":"npm/#update-packagesjson","title":"Update <code>packages.json</code>","text":"<pre><code>sudo npm install -g npm-check-updates\nncu -u\n</code></pre>"},{"location":"npm/#update-node","title":"Update Node","text":"set latest Version as default with this command<pre><code>nvm alias default node\n</code></pre> now you can update npm with this command<pre><code>npm install -g npm\n</code></pre>"},{"location":"pass/","title":"pass","text":""},{"location":"pass/#installation","title":"Installation","text":"<pre><code># Ubuntu\nbrew install pass\n</code></pre> <p>Remove gpg-agent error</p> <pre><code>sudo apt remove gpg-agent\ngpgconf --kill gpg-agent\n</code></pre>"},{"location":"pass/#usage","title":"Usage","text":""},{"location":"pass/#import-file","title":"Import File","text":"<pre><code>pass insert -fm gpg/revoke &lt; file.txt\n</code></pre>"},{"location":"pass/#git","title":"Git","text":"<pre><code># Push your local pass history\npass git push -u --all\n</code></pre>"},{"location":"pass/#reconnecting-existing-repo","title":"Reconnecting Existing Repo","text":"<pre><code>git clone git@github.com:nicholaswilde/pass.git ~/.password-store\n</code></pre>"},{"location":"pass/#pass-import","title":"pass-import","text":"<pre><code>wget -qO - https://pkg.pujol.io/debian/gpgkey | sudo apt-key add -\necho 'deb [arch=amd64] https://pkg.pujol.io/debian/repo all main' | sudo tee /etc/apt/sources.list.d/pkg.pujol.io.list\nsudo apt-get update\nsudo apt-get install pass-extension-import\n</code></pre>"},{"location":"pass/#encrypt-files","title":"Encrypt Files","text":"<pre><code>pass insert -m sensitive/secret_answers &lt; secret_answers.txt\n# Or\ncat secret_answers.txt | pass insert -m sensitive/secret_answers\n</code></pre>"},{"location":"pass/#references","title":"References","text":"<ul> <li>https://wiki.archlinux.org/index.php/Pass</li> <li>https://vitalyparnas.com/guides/pass/#files</li> </ul>"},{"location":"platformio/","title":"PlatformIO","text":""},{"location":"platformio/#installation","title":"Installation","text":"<pre><code>curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py | python3\n</code></pre> Shell Commands<pre><code>(\n  [ -d ~/.local/bin/ ] || mkdir ~/.local/bin/ &amp;&amp;\n  ln -s ~/.platformio/penv/bin/platformio ~/.local/bin/platformio &amp;&amp;\n  ln -s ~/.platformio/penv/bin/pio ~/.local/bin/pio &amp;&amp;\n  ln -s ~/.platformio/penv/bin/piodebuggdb ~/.local/bin/piodebuggdb &amp;&amp;\n)\n</code></pre>"},{"location":"platformio/#config","title":"Config","text":"paltformio.ini <pre><code>; PlatformIO Project Configuration File\n;\n;   Build options: build flags, source filter\n;   Upload options: custom upload port, speed and extra flags\n;   Library options: dependencies, extra library storages\n;   Advanced options: extra scripting\n;\n; Please visit documentation for the other options and examples\n; https://docs.platformio.org/page/projectconf.html\n\n[platformio]\nsrc_dir = ./src\ndefault_envs = msc_external_flash_sdcard\n\n[env]\nplatform = espressif32\nframework = arduino\nmonitor_speed = 115200\n\n[env:LILYGO-T-Dongle-S3]\nboard = esp32-s3-devkitc-1\nbuild_src_filter = +&lt;digital-picture-frame/&gt;\nupload_resetmethod = nodemcu\nmonitor_rts = 0\nmonitor_dtr = 0\nbuild_flags = \n        -DARDUINO_USB_MODE=1\n        -DARDUINO_USB_CDC_ON_BOOT=1\n        -D DISPLAY_RST=1\n        -D DISPLAY_DC=2\n        -D DISPLAY_MOSI=3\n        -D DISPLAY_CS=4\n        -D DISPLAY_SCLK=5\n        -D DISPLAY_LEDA=38\n        -D DISPLAY_MISO=-1\n        -D DISPLAY_BUSY=-1\n        -D DISPLAY_WIDTH=160\n        -D DISPLAY_HEIGHT=80\n        -D TFT_WIDTH=80\n        -D TFT_HEIGHT=160\n        -D SD_MMC_D0_PIN=14\n        -D SD_MMC_D1_PIN=17\n        -D SD_MMC_D2_PIN=21\n        -D SD_MMC_D3_PIN=18\n        -D SD_MMC_CLK_PIN=12\n        -D SD_MMC_CMD_PIN=16\n        -D BTN_PIN=0\n        -D NUM_LEDS=1\n        -D LED_DI_PIN=40\n        -D LED_CI_PIN=39\nlib_deps = fastled/FastLED@^3.10.1\n\n[env:blink]\nextends = env:LILYGO-T-Dongle-S3\nbuild_src_filter = +&lt;blink/&gt;\nlib_deps =\n    fastled/FastLED@^3.10.1\n\n[env:sd2usbmsc]\nextends = env:LILYGO-T-Dongle-S3\nbuild_src_filter = +&lt;sd2usbmsc/&gt;\n\n[env:msc_external_flash_sdcard]\nextends = env:LILYGO-T-Dongle-S3\nbuild_src_filter = +&lt;msc_external_flash_sdcard/&gt;\n</code></pre>"},{"location":"platformio/#usage","title":"Usage","text":"Build<pre><code>pio run\n</code></pre> Clean build files<pre><code>pio run --target clean\n</code></pre> Upload the firmware<pre><code>pio run --target upload\n</code></pre> Monitor the serial output<pre><code>pio device monitor\n</code></pre> List connected serial devices<pre><code>pio device list\n</code></pre> Update project dependencies<pre><code>pio pkg update\n</code></pre> Build with verbose output<pre><code>pio run --verbose\n</code></pre>"},{"location":"platformio/#references","title":"References","text":""},{"location":"proxmox/","title":"Proxmox","text":"","tags":["homelab","linux","proxmox"]},{"location":"proxmox/#proxmox-ve-helper-scripts","title":"Proxmox VE Helper-Scripts","text":"<pre><code>(\n  bash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/misc/update-repo.sh)\" &amp;&amp;\n  bash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/misc/post-pve-install.sh)\"\n)\n</code></pre> <pre><code>sudo apt install ca-certificates curl gnupg lsb-release ntp htop zip unzip gnupg apt-transport-https ca-certificates net-tools ncdu apache2-utils ssh-import-id git build-essential\n</code></pre> <pre><code>(\n  adduser nicholas &amp;&amp;\n  usermod -G adm,cdrom,lpadmin,sudoers,sambashare,dip,plugdev user123 &amp;&amp;\n  su nicholas\n)\n</code></pre>","tags":["homelab","linux","proxmox"]},{"location":"proxmox/#raspberry-pi-4","title":"Raspberry Pi 4","text":"","tags":["homelab","linux","proxmox"]},{"location":"proxmox/#tldr","title":"TL;DR","text":"<pre><code>(\n  sudo su root  &amp;&amp; \\\n  passwd  &amp;&amp; \\\n  echo \"&lt;ip address&gt; &lt;hostname&gt;\" | tee -a /etc/hosts  &amp;&amp; \\\n  hostname --ip-address  &amp;&amp; \\\n  echo 'deb [arch=arm64] https://mirrors.apqa.cn/proxmox/debian/pve bookworm port'&gt;/etc/apt/sources.list.d/pveport.list &amp;&amp; \\\n  curl -L https://mirrors.apqa.cn/proxmox/debian/pveport.gpg -o /etc/apt/trusted.gpg.d/pveport.gpg &amp;&amp; \\\n  apt update &amp;&amp; \\\n  apt full-upgrade &amp;&amp; \\\n  apt install ifupdown2 &amp;&amp; \\\n  apt install proxmox-ve postfix open-iscsi &amp;&amp; \\\n  sudo sed -i 's/^#?\\s*PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config\n}\n</code></pre> <p>Install Raspberry Pi OS.</p> <p>Switch to root user. Default password is blank for Raspberry Pi OS.</p> <pre><code>sudo su root\n</code></pre> <p>Set root password so that you can log into Proxmox web GUI.</p> <pre><code>passwd\n</code></pre> <p>Add an <code>/etc/hosts</code> entry for your IP address.</p> <p>Please make sure that your machine's hostname is resolvable via <code>/etc/hosts</code>, i.e. you need an entry in <code>/etc/hosts</code> which assigns an address to its hostname.</p> <p>Make sure that you have configured one of the following addresses in <code>/etc/hosts</code> for your hostname:</p> <p>1 IPv4 or 1 IPv6 or 1 IPv4 and 1 IPv6 Note: This also means removing the address 127.0.1.1 that might be present as default.</p> <p>For instance, if your IP address is 192.168.15.77, and your hostname prox4m1, then your /etc/hosts file could look like:</p> <pre><code># /etc/hosts\n127.0.0.1       localhost.localdomain localhost\n\n::1             localhost ip6-localhost ip6-loopback\nff02::1         ip6-allnodes\nff02::2         ip6-allrouters\n\n192.168.1.192   pve02.nicholaswilde.io pve02\n</code></pre> <p>You can test if your setup is ok using the hostname command:</p> <pre><code>hostname --ip-address\n</code></pre> <pre><code>192.168.15.77 # should return your IP address here\n</code></pre>","tags":["homelab","linux","proxmox"]},{"location":"proxmox/#install-proxmox-ve","title":"Install Proxmox VE","text":"","tags":["homelab","linux","proxmox"]},{"location":"proxmox/#add-the-proxmox-ve-repository","title":"Add the Proxmox VE repository:","text":"<pre><code>echo 'deb [arch=arm64] https://mirrors.apqa.cn/proxmox/debian/pve bookworm port'&gt;/etc/apt/sources.list.d/pveport.list\n</code></pre> <p>Add the Proxmox VE repository key:</p> <pre><code>curl -L https://mirrors.apqa.cn/proxmox/debian/pveport.gpg -o /etc/apt/trusted.gpg.d/pveport.gpg \n</code></pre> <p>Update your repository and system by running:</p> <pre><code>apt update &amp;&amp; apt full-upgrade\n</code></pre> <p>Install Proxmox VE packages Install the ifupdown2 packages</p> <pre><code>apt install ifupdown2\n</code></pre> <p>Install the Proxmox VE packages</p> <pre><code>apt install proxmox-ve postfix open-iscsi\n</code></pre> <p>Configure packages which require user input on installation according to your needs (e.g. Samba asking about WINS/DHCP support). If you have a mail server in your network, you should configure postfix as a satellite system, your existing mail server will then be the relay host which will route the emails sent by the Proxmox server to their final recipient.</p> <p>If you don't know what to enter here, choose local only and leave the system name as is.</p> <p>Reenable ssh.</p> <pre><code>sudo sed -i 's/^#?\\s*PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config\n</code></pre> <pre><code># /etc/ssh/sshd_config\nPermitRootLogin yes\n</code></pre> <p>Finally, you can connect to the admin web interface (<code>https://youripaddress:8006</code>).</p>","tags":["homelab","linux","proxmox"]},{"location":"proxmox/#kernel-page-size","title":"Kernel Page Size","text":"<p>You should use the Kernel with 4K pagesize</p> <pre><code># /boot/firmware/config.txt\nkernel=kernel8.img # to end of line\n</code></pre>","tags":["homelab","linux","proxmox"]},{"location":"proxmox/#ct-notes","title":"CT Notes","text":"<p>Is the container summary memory usage and swap usage always shows 0?</p> <pre><code># /boot/firmware/cmdline.txt\ncgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1\n</code></pre>","tags":["homelab","linux","proxmox"]},{"location":"proxmox/#network","title":"Network","text":"","tags":["homelab","linux","proxmox"]},{"location":"proxmox/#missing-vmbr0","title":"Missing vmbr0","text":"<p>Create vmbr0 network interface in GUI</p> <pre><code>&lt;node&gt; -&gt; Network -&gt; Create\nName: vmbr0\nIPv4: 192.168.1.192/24\nGateweay: 192.168.1.1 \nBridge Ports: eth0\n</code></pre> <p>Where <code>eth0</code> is the current existing network interface</p>","tags":["homelab","linux","proxmox"]},{"location":"proxmox/#n-repository-httpdebdebianorgdebian-buster-inrelease-changed-its-version-value-from-to-100-error","title":"N: Repository 'http://deb.debian.org/debian buster InRelease' changed its 'Version' value from '' to '10.0' Error","text":"<pre><code>apt-get --allow-releaseinfo-change update\n</code></pre>","tags":["homelab","linux","proxmox"]},{"location":"python/","title":"Python","text":""},{"location":"python/#update-all-installed-packages","title":"Update All Installed Packages","text":"<pre><code>pip3 list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U\n</code></pre>"},{"location":"python/#remap-python-to-python3","title":"Remap <code>python</code> to <code>python3</code>","text":"<pre><code># https://askubuntu.com/a/1234598/344358\nsudo apt install python-is-python3\n</code></pre>"},{"location":"python/#pip","title":"Pip","text":"<pre><code>sudo apt install python3-pip\n</code></pre>"},{"location":"python/#install-github-tarball","title":"Install GitHub Tarball","text":"<pre><code>pip install --upgrade https://github.com/&lt;username&gt;/&lt;repo&gt;/&lt;tarball&gt;/&lt;branch&gt;\npip install --upgrade https://github.com/nicholaswilde/parse-ingredients/tarball/nlp-proof-of-concept\npip install git+https://github.com/jkbr/httpie.git#egg=httpie\n</code></pre>"},{"location":"python/#create-tarball-of-package-in-dist-folder","title":"Create Tarball of package in <code>./dist</code> folder","text":"<pre><code>python setup.py sdist\n</code></pre>"},{"location":"python/#upgrade-pip-package","title":"Upgrade pip package","text":"<pre><code>pip install &lt;package_name&gt; --upgrade\npip install &lt;package_name&gt; -U\n</code></pre>"},{"location":"regex/","title":"Regex","text":""},{"location":"regex/#accented-characters","title":"Accented Characters","text":"<pre><code>[A-z\u00c0-\u00fa] // accepts lowercase and uppercase characters\n[A-z\u00c0-\u00ff] // as above, but including letters with an umlaut (includes [ ] ^ \\ \u00d7 \u00f7)\n[A-Za-z\u00c0-\u00ff] // as above but not including [ ] ^ \\\n[A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u00ff] // as above, but not including [ ] ^ \\ \u00d7 \u00f7\n</code></pre>"},{"location":"regex/#references","title":"References","text":"<ul> <li>https://regex101.com/</li> </ul>"},{"location":"rpi/","title":"RPi","text":""},{"location":"rpi/#raspberry-pi-4-boot-from-usb","title":"Raspberry Pi 4 boot from usb","text":"<pre><code>sudo raspi-config\nAdvanced Options -&gt; Boot Order -&gt; B2 NVMe/USB\nsudo reboot\n</code></pre> <pre><code># to get vendorId and deviceId\n$ dmesg\n$ sudo nano /boot/cmdline.txt\nusb-storage.quirks=152d:1561:u console=serial0,115200 console=tty1 root=PARTUUID=fcf4cb94-02 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait\n$ echo program_usb_boot_mode=1 | sudo tee -a /boot/config.txt\n# Check\n$ mount | egrep \"/([[:space:]]|boot)\"\n</code></pre> <pre><code>vcgencmd otp_dump | grep 17\n17:1020000a=USB boot disabled\n17:3020000a=USB boot enabled\n</code></pre> <pre><code>sudo raspi-config\nsudo rpi-update\nsudo raspi-config --expand-rootfs\n</code></pre>"},{"location":"rpi/#trusted-key-problem","title":"Trusted Key Problem","text":"<pre><code>Reading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\n8 packages can be upgraded. Run 'apt list --upgradable' to see them.\nW: https://packages.microsoft.com/repos/edge/dists/stable/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.\nW: https://download.sublimetext.com/apt/stable/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.\n</code></pre> <pre><code>cd /etc/apt\nsudo cp trusted.gpg trusted.gpg.d\n</code></pre>"},{"location":"rpi/#generate-user-before-boot","title":"Generate User Before Boot","text":"<pre><code>echo 'mypassword' | openssl passwd -6 -stdin | sudo tee -a /boot/userconf.txt\n# /boot/userconf.txt\nuser:password-hash\n# Enable ssh\ntouch /boot/ssh\n</code></pre>"},{"location":"rpi/#ruby","title":"Ruby","text":"<pre><code>$ sudo apt-get install rbenv\n$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' &gt;&gt; .bashrc\n$ echo 'eval \"$(rbenv init -)\"' &gt;&gt; .bashrc\n$ rbenv\n$ git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build\n$ rbenv install --list\n$ rbenv install 2.3.1\n$ rbenv global 2.3.1\n</code></pre>"},{"location":"rpi/#server-images-64bit","title":"Server Images 64bit","text":"<ul> <li>https://downloads.raspberrypi.org/raspios_arm64/images/</li> </ul>"},{"location":"rpi/#convert-to-server","title":"Convert to server","text":"<pre><code>(\n  sudo apt --purge remove -y \"x11-*\"\n  sudo apt --purge -y autoremove\n  sudo apt update\n  sudo apt upgrade -y\n)\n</code></pre>"},{"location":"rpi/#swap","title":"Swap","text":"<p>Temporarily Stop Swap</p> <pre><code>sudo dphys-swapfile swapoff\n</code></pre> <p>Modify the size of the swap</p> <pre><code>sudo nano /etc/dphys-swapfile\nCONF_SWAPSIZE=2048\n</code></pre> <p>Initialize Swap File</p> <pre><code>sudo dphys-swapfile setup\n</code></pre> <p>Start Swap</p> <pre><code>sudo dphys-swapfile swapon\n</code></pre>"},{"location":"rpi/#proxmox","title":"Proxmox","text":"<ul> <li>See Proxmox.</li> </ul>"},{"location":"rpi/#watchdog-timer","title":"Watchdog Timer","text":"<pre><code>ls -al /dev/watchdog*\ncrw------- 1 root root  10, 130 Nov  3  2016 /dev/watchdog\ncrw------- 1 root root 252,   0 Nov  3  2016 /dev/watchdog0\n</code></pre> <pre><code># /etc/systemd/system.conf\nRuntimeWatchdogSec=10\nShutdownWatchdogSec=10min\n</code></pre> <pre><code>dmesg | grep -i watchdog\n[    0.763148] bcm2835-wdt 3f100000.watchdog: Broadcom BCM2835 watchdog timer\n[    1.997557] systemd[1]: Hardware watchdog 'Broadcom BCM2835 Watchdog timer', version 0\n[    2.000728] systemd[1]: Set hardware watchdog to 10s.\n</code></pre>"},{"location":"rpi/#references","title":"References","text":""},{"location":"rtl433/","title":"rtl433","text":"<pre><code>sudo lsusb\n</code></pre> <pre><code>Bus 001 Device 005: ID 0bda:2838 Realtek Semiconductor Corp. RTL2838 DVB-T\n</code></pre> <pre><code>sudo nano /etc/udev/rules.d/99-rtl433.rules\n</code></pre> <pre><code>SUBSYSTEM==\"usb\", ATTRS{idVendor}==\"0bda\", ATTRS{idProduct}==\"2838\", SYMLINK+=\"rtl433\"\n</code></pre> <pre><code>sudo udevadm control --reload-rules\nsudo udevadm trigger\n</code></pre> <pre><code>---\nservices:\n  rtl433:\n    image: hertzg/rtl_433:25.02\n    container_name: rtl433\n    devices:\n      - /dev/rtl433:/dev/bus/usb/001/004\n    command:\n      - \"-Mtime:unix:usec:utc\"\n      - \"-Fmqtt://192.168.1.143:1883,retain=1,user=${RTL_USER},pass=${RTL_PASS},events=rtl_433[/model][/id]\"\n      - \"-Ccustomary\"\n      - \"-f915M\"\n      - \"-f433.9M\"\n    restart: unless-stopped\n    network_mode: host\n</code></pre>"},{"location":"signal/","title":"Signal","text":""},{"location":"signal/#installation","title":"Installation","text":"<pre><code>brew install signal-cli\n</code></pre>"},{"location":"signal/#link-device-from-cli","title":"Link Device from CLI","text":"<pre><code>signal-cli link -n \"optional device name\" | tee &gt;(xargs -L 1 qrencode -t utf8)\n# or\nsignal-cli link -n \"optional device name\" | xargs -L 1 qrencode -o /tmp/qrcode.png &amp; while [ ! -f /tmp/qrcode.png ]; do sleep 1; done; xdg-open /tmp/qrcode.png\n</code></pre>"},{"location":"specifications/","title":"Specifications","text":"<p>References to various specifications used on projects.</p>"},{"location":"specifications/#references","title":"References","text":"<ul> <li>Convential Commits</li> <li>Semver</li> <li>Code of Conduct</li> <li>Developer Certificate of Origin</li> <li>Gofmt Principles</li> <li>Boy-scout Rule</li> <li>asciinema<ul> <li>agg - asciinema gif generator</li> </ul> </li> <li>gitignore.io</li> </ul>"},{"location":"ssh/","title":"SSH","text":"id_ed25519.txtlpass <pre><code>(\n  [ -d ~/.ssh ] || mkdir ~/.ssh &amp;&amp;\n  curl https://github.com/nicholaswilde.keys -o ~/.ssh/authorized_keys &amp;&amp;\n  cp id_ed25519.txt  ~/.ssh/id_ed25519 &amp;&amp;\n  chmod 600 ~/.ssh/id_ed25519 &amp;&amp;\n  ssh-keygen -y -f ~/.ssh/id_ed25519 &gt; ~/.ssh/id_ed25519.pub &amp;&amp;\n  chmod 644 ~/.ssh/id_ed25519.pub &amp;&amp;\n  chmod 0700 ~/.ssh\n)\n</code></pre> <pre><code>(\n  [ -d ~/.ssh ] || mkdir ~/.ssh &amp;&amp;\n  curl https://github.com/nicholaswilde.keys -o ~/.ssh/authorized_keys &amp;&amp;\n  lpass show ssh --attach=att-4322045537695550419-20689 -q &gt; ~/.ssh/id_ed25519 &amp;&amp;\n  chmod 600 ~/.ssh/id_ed25519 &amp;&amp;\n  ssh-keygen -y -f ~/.ssh/id_ed25519 &gt; ~/.ssh/id_ed25519.pub &amp;&amp;\n  chmod 644 ~/.ssh/id_ed25519.pub &amp;&amp;\n  chmod 0700 ~/.ssh\n)\n</code></pre>","tags":["linux"]},{"location":"ssh/#authentication","title":"Authentication","text":"<pre><code>(\n  sudo sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config &amp;&amp; \\\n  echo \"RSAAuthentication yes\" | sudo tee -a /etc/ssh/sshd_config\n)\n</code></pre> <pre><code># /etc/ssh/sshd_config\n...\nRSAAuthentication yes\nPubkeyAuthentication yes\n...\n</code></pre> <pre><code># Restart ssh\nsudo systemctl restart sshd\n</code></pre>","tags":["linux"]},{"location":"ssh/#verify-that-keys-match","title":"Verify that Keys Match","text":"<p>To verify if a public and private RSA SSH key pair match, you can compare their fingerprints using the <code>ssh-keygen</code> command. If the fingerprints generated from both the private and public keys are identical, then the keys are a matching pair.</p> <ol> <li> <p>Get the fingerprint of the private key: <pre><code>ssh-keygen -lf /path/to/your/private_key\n</code></pre>     Replace <code>/path/to/your/private_key</code> with the actual path to your private key file (e.g., <code>~/.ssh/id_rsa</code>).</p> </li> <li> <p>Get the fingerprint of the public key: <pre><code>ssh-keygen -lf /path/to/your/public_key.pub\n</code></pre>     Replace <code>/path/to/your/public_key.pub</code> with the actual path to your public key file (e.g., <code>~/.ssh/id_rsa.pub</code>).</p> </li> <li> <p>Compare the outputs:     The output for both commands will be a string containing the key size, the fingerprint (a series of hexadecimal numbers separated by colons), and a comment. If the SHA256 fingerprint values are exactly the same for both the private and public keys, then they are a matching pair.</p> </li> </ol>","tags":["linux"]},{"location":"task/","title":"Task","text":"","tags":["linux"]},{"location":"task/#installation","title":"Installation","text":"<pre><code>brew install go-task\n</code></pre> <pre><code># For Default Installion to ./bin with debug logging\nsh -c \"$(curl --location https://taskfile.dev/install.sh)\" -- -d\n\n# For Installation To /usr/local/bin for userwide access with debug logging\n# May require sudo sh\nsh -c \"$(curl --location https://taskfile.dev/install.sh)\" -- -d -b /usr/local/bin\n</code></pre>","tags":["linux"]},{"location":"task/#checks","title":"Checks","text":"<pre><code>  _check-chart:\n    cmds:\n      # Check if variable exists\n      - test -n \"{{ .CHART }}\" || (echo \"Please define CHART parameter\"; exit 1)\n      # Check if directory exists\n      - test -d {{.GIT_ROOT}}/charts/{{.CHART}} || (echo \"Chart {{ .CHART }} doesn't exist\"; exit 1) \n      # Check if a file exists\n      - test -f {{.GIT_ROOT}}/charts/{{.CHART}} || (echo \"Chart {{ .CHART }} doesn't exist\"; exit 1) \n    silent: true\n</code></pre> <p>Note</p> <p>If you want to call a task declared in the root Taskfile from within an included Taskfile, add a leading <code>:</code> like this: <code>task: :task-name</code>.</p>","tags":["linux"]},{"location":"task/#escape-braces","title":"Escape Braces","text":"<pre><code>{{\"{{\"}}\n{{\"}}\"}}\n</code></pre> <p>produces</p> <pre><code>{{\n}}\n</code></pre> <pre><code>cmds:\n  - sed -i 's/{{\"{{\"}} LIB {{\"}}\"}}/{{ .EXAMPLE }}/g' ./examples/{{ .EXAMPLE }}.sh\n</code></pre>","tags":["linux"]},{"location":"tmux/","title":"tmux","text":""},{"location":"tmux/#installation","title":"Installation","text":"<pre><code>sudo apt install tmux\n</code></pre>"},{"location":"tmux/#allow-notify-in-tmux","title":"Allow Notify in tmux","text":"<pre><code>set -g allow-passthrough on\n</code></pre>"},{"location":"tmux/#tpm","title":"TPM","text":"<p>Install tpm</p> <pre><code>mkdir -p ~/.tmux/plugins\ngit clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm\n# Ctrl + b\n# Shift + I\n</code></pre>"},{"location":"tmux/#autostart-session","title":"Autostart Session","text":"~/.bashrc<pre><code>if [[ $- =~ i ]] &amp;&amp; [[ -z \"$TMUX\" ]] &amp;&amp; [[ -n \"$SSH_TTY\" ]]; then\n  tmux attach-session -t ssh_tmux || tmux new-session -s ssh_tmux\nfi\n</code></pre> <p>This command creates a tmux session called ssh_tmux if none exists, or reattaches to a already existing session with that name. In case your connection dropped or when you forgot a session weeks ago, every SSH login automatically brings you back to the tmux-ssh session you left behind.</p>"},{"location":"tmux/#what-if-i-mess-up-and-lock-myself-out-somehow","title":"What if I mess up and lock myself out somehow?","text":"<pre><code>ssh -t myname@myserver bash --norc\n</code></pre> <p>(You might also need --noprofile, depending on your setup)</p> Or just connect with sh<pre><code>ssh -t myname@myserver sh\n</code></pre>"},{"location":"tmux/#references","title":"References","text":"<ul> <li>https://tmuxcheatsheet.com/</li> </ul>"},{"location":"ubuntu/","title":"Ubuntu","text":"","tags":["linux"]},{"location":"ubuntu/#1-httpsubuntucomserverdocsnetwork-configuration","title":"1: https://ubuntu.com/server/docs/network-configuration","text":"<pre><code>sudo hostnamectl set-hostname &lt;hostname&gt;\n</code></pre>","tags":["linux"]},{"location":"ubuntu/#perform-a-distrubution-upgrade","title":"Perform a Distrubution Upgrade","text":"<pre><code>sudo do-release-upgrade -d\n</code></pre>","tags":["linux"]},{"location":"ubuntu/#screen-on-wsl","title":"Screen on WSL","text":"<pre><code>mkdir ~/.screen &amp;&amp; chmod 700 ~/.screen\n</code></pre> ~/.bashrc<pre><code>export SCREENDIR=$HOME/.screen\n</code></pre>","tags":["linux"]},{"location":"ubuntu/#remove-snap","title":"Remove Snap","text":"<pre><code>(\n  sudo umount /var/snap\n  sudo apt purge snapd\n  sudo rm -rf ~/snap /snap /var/snap /var/lib/snapd\n)\n</code></pre>","tags":["linux"]},{"location":"ubuntu/#an-upgrade-from-hirsute-to-jammy-is-not-supported-with-this-tool","title":"An upgrade from 'hirsute' to 'jammy' is not supported with this tool","text":"<pre><code>Reading cache\n\nChecking package manager\n\nCan not upgrade \n\nAn upgrade from 'hirsute' to 'jammy' is not supported with this tool.\n</code></pre> script.sh<pre><code>#!/bin/bash\necho \"Updating\"\nsudo apt-get update\nsudo apt-get upgrade -y\nsudo apt-get dist-upgrade -y\necho \"Bypass check\"\nsudo sed -i 's/continue/pass/g' /usr/lib/python3/dist-packages/UpdateManager/Core/MetaRelease.py\necho \"Upgrade distro\"\nsudo do-release-upgrade\n</code></pre> <pre><code>chmod +x script.sh &amp;&amp; ./script.sh\n</code></pre>","tags":["linux"]},{"location":"ubuntu/#ubuntu-apt-get-update-fails-the-repository-no-longer-has-a-release-file","title":"Ubuntu \u2013 apt-get update fails \u201cThe repository no longer has a Release file\u201d","text":"<pre><code>sudo apt update\nErr:6 http://archive.ubuntu.com/ubuntu eoan Release\n404 Not Found [IP: 91.189.88.142 80]\n</code></pre> <pre><code># backup your sources file\ncp /etc/apt/sources.list /etc/apt/sources.list.bak \n\n# replace the links with the archive address\nsudo sed -i -re 's/([a-z]{2}.)?archive.ubuntu.com|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list\n\n# run update again\nsudo apt update &amp;&amp; sudo apt dist-upgrade\n</code></pre>","tags":["linux"]},{"location":"ubuntu/#auto-retart-daemons-during-update","title":"Auto Retart Daemons during Update","text":"<pre><code>sudo sed -i 's/#$nrconf{restart} = '\"'\"'i'\"'\"';/$nrconf{restart} = '\"'\"'a'\"'\"';/g' /etc/needrestart/needrestart.conf\n</code></pre>","tags":["linux"]},{"location":"ubuntu/#user-groups","title":"User Groups","text":"<pre><code>usermod -a -G adm,cdrom,lpadmin,sudo,sambashare,dip,plugdev nicholas\n</code></pre>","tags":["linux"]},{"location":"ubuntu/#autocomplete-directories","title":"Autocomplete Directories","text":"<p><code>export CDPATH=foo</code></p>","tags":["linux"]},{"location":"ubuntu/#apt-cacher-ng","title":"Apt Cacher NG","text":"","tags":["linux"]},{"location":"ubuntu/#server","title":"Server","text":"<pre><code># /etc/apt-cacher-ng/acng.conf\nPassThroughPattern: .*\nCacheDir: /mnt/storage/apt-cacher-ng\n</code></pre> <pre><code>systemctl restart apt-cacher-ng\n</code></pre>","tags":["linux"]},{"location":"ubuntu/#client","title":"Client","text":"<pre><code>echo \"Acquire::http::Proxy \\\"http://aptcache.nicholaswilde.io:3142\\\";\"| sudo tee /etc/apt/apt.conf.d/00aptproxy\n</code></pre>","tags":["linux"]},{"location":"w11/","title":"Windows 11","text":""},{"location":"w11/#reload-powershell-profile","title":"Reload PowerShell Profile","text":"<pre><code>. $profile\n</code></pre>"},{"location":"w11/#gpg","title":"GPG","text":"<pre><code>winget install GnuPG.GnuPG\ngit config --global gpg.program \"C:\\Program Files (x86)\\GnuPG\\bin\\gpg.exe\"\n</code></pre>"},{"location":"w11/#microsoft-store-apps-update","title":"Microsoft Store Apps Update","text":"Powershell<pre><code>Get-CimInstance -Namespace \"Root\\cimv2\\mdm\\dmmap\" -ClassName \"MDM_EnterpriseModernAppManagement_AppManagement01\" | Invoke-CimMethod -MethodName UpdateScanMethod\n</code></pre>"},{"location":"w11/#share-usb-with-wsl","title":"Share USB with WSL","text":"Powershell<pre><code>winget install --interactive --exact dorssel.usbipd-win\nusbipd wsl list\nusbipd wsl attach --busid &lt;busid&gt;\nusbipd wsl detach --busid &lt;busid&gt;\n</code></pre>"},{"location":"w11/#copy-from-wsl","title":"Copy from WSL","text":"<pre><code>echo \"test\" | clip.exe\n</code></pre>"},{"location":"w11/#scoop","title":"Scoop","text":"<pre><code>iwr -useb get.scoop.sh | iex\n</code></pre>"},{"location":"w11/#create-empty-file","title":"Create Empty File","text":"<pre><code>ni .gitkeep\n</code></pre>"},{"location":"w11/#profile","title":"Profile","text":"<pre><code>echo $profile\nC:\\Users\\nicholas\\OneDrive\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1\n. $profile\n</code></pre>"},{"location":"w11/#aliases","title":"Aliases","text":"Copy alias<pre><code>Copy-Item -Path Alias:ni -Destination Alias:touch\n</code></pre>"},{"location":"w11/#terminal-paste-multiple-lines-warning","title":"Terminal Paste Multiple Lines Warning","text":"settings.json<pre><code>{\n  \"multiLinePasteWarning\": false,\n}\n</code></pre>"},{"location":"w11/#powershell-history","title":"PowerShell History","text":"<pre><code>cat (Get-PSReadlineOption).HistorySavePath\n</code></pre>"},{"location":"w11/#how-to-mount-remote-file-systems-over-ssh","title":"How to Mount Remote File Systems Over SSH","text":"<pre><code>winget install evsar3.sshfs-win-manager\nwinget install WinFsp.WinFsp\nwinget install SSHFS-Win.SSHFS-Win\n</code></pre> <ul> <li>https://github.com/evsar3/sshfs-win-manager</li> <li>https://github.com/winfsp/winfsp</li> <li>https://github.com/winfsp/sshfs-win</li> </ul>"},{"location":"yq/","title":"yq","text":""},{"location":"yq/#homepage","title":"Homepage","text":"<ul> <li>https://mikefarah.gitbook.io/yq/</li> </ul>"},{"location":"yq/#hide-nulls","title":"Hide Nulls","text":"<pre><code>yq '.foo|select(length&gt;0)'\n</code></pre>"},{"location":"yq/#reference","title":"Reference","text":"<ul> <li>https://mikefarah.gitbook.io/yq/</li> </ul>"},{"location":"yubikey/","title":"Yubikey","text":""},{"location":"yubikey/#installation","title":"Installation","text":"Ubuntu<pre><code>sudo apt install pcscd scdaemon\nbrew install ykman\n</code></pre> Windows 11<pre><code>winget install Yubico.YubikeyManager\n</code></pre> <p>Add Yubico Manager program location to <code>PATH</code>.</p> <p><code>C:\\Program Files\\Yubico\\YubiKey Manager</code></p>"},{"location":"yubikey/#card-status","title":"Card Status","text":"<pre><code>gpg --card-status\n</code></pre>"},{"location":"yubikey/#metadata","title":"Metadata","text":"<pre><code>gpg --card-edit\ngpg/card&gt; name\n</code></pre>"},{"location":"yubikey/#references","title":"References","text":"<ul> <li>https://github.com/drduh/YubiKey-Guide/blob/master/README.md</li> </ul>"}]}